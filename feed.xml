<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="https://lewinz.org/feed.xml" rel="self" type="application/atom+xml" /><link href="https://lewinz.org/" rel="alternate" type="text/html" /><updated>2021-07-22T22:21:29+08:00</updated><id>https://lewinz.org/feed.xml</id><title type="html">阿嫂</title><subtitle>阿嫂个人博客</subtitle><author><name>Lewin</name></author><entry><title type="html">Linux ssh 连接超时断开问题</title><link href="https://lewinz.org/2021/07/22/linux-connect-timeout/" rel="alternate" type="text/html" title="Linux ssh 连接超时断开问题" /><published>2021-07-22T00:00:00+08:00</published><updated>2021-07-22T00:00:00+08:00</updated><id>https://lewinz.org/2021/07/22/linux-connect-timeout</id><content type="html" xml:base="https://lewinz.org/2021/07/22/linux-connect-timeout/">&lt;h2 id=&quot;现象&quot;&gt;现象&lt;/h2&gt;
&lt;p&gt;在使用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ssh&lt;/code&gt; 连接 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Linux&lt;/code&gt; 之后，搁置一段时间会自动断开，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ctrl + c&lt;/code&gt; 也没反应。&lt;/p&gt;

&lt;h2 id=&quot;原因&quot;&gt;原因&lt;/h2&gt;
&lt;p&gt;在 iptables 的一些 NAT 配置说明里有提到 ——&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;4.3.6 State match 状态匹配扩展要有内核里的连接跟踪代码的协助，因为它是从连接跟踪机制中得到包的状态的。这样我们就可以了解连接所处的状态。它几乎适用于所有的协议，包括那些无状态的协议，如 ICMP 和 UDP。针对每个连接都有一个缺省的超时值，如果连接的时间超过了这个值，那么这个连接的记录就被会从连接跟踪的记录数据库中删除，也就是说连接就不再存在了。这个 match 必须有 - m state 作为前提才能使用。状态机制的详细内容在章节状态机制中。[2]&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;NAT firewalls like to time out idle sessions to keep their state tables clean and their memory footprint low.
NAT 防火墙喜欢对空闲的会话进行超时处理，以确保它们状态表的干净和内存的低占用率。
Some firewalls are nice, and let you idle for up to a day or so; some are gestapo and terminate your session after 5 minutes.
一些防火墙比较友好，允许你的空闲会话时间为一天甚至超过一天；另一些却如盖世太保，5 分钟空闲就终止你的会话。[3]&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;通过这段描述我们就比较能大致想到断开的原因了 ——&lt;/p&gt;

&lt;p&gt;通过 ssh 连接后，客户端和服务端长时间没响应时，在两方机器设置中均没任何限制，但在各自的防火墙，或是中转网络连接路由的防火墙中，出现了「闲置超时断开」的缺省机制！&lt;/p&gt;

&lt;h2 id=&quot;解决方案&quot;&gt;解决方案&lt;/h2&gt;
&lt;h3 id=&quot;修改服务端配置&quot;&gt;修改服务端配置&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vi ~/.ssh/config&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;TCPKeepAlive &lt;span class=&quot;nb&quot;&gt;yes&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#表示 TCP 保持连接不断开&lt;/span&gt;
ClientAliveInterval 300 &lt;span class=&quot;c&quot;&gt;#指定服务端向客户端请求消息的时间间隔，单位是秒，默认是 0，不发送。设置个 300 表示 5 分钟发送一次（注意，这里是服务端主动发起），然后等待客户端响应，成功，则保持连接。&lt;/span&gt;
ClientAliveCountMax 3 &lt;span class=&quot;c&quot;&gt;#指服务端发出请求后客户端无响应则自动断开的最大次数。使用默认给的 3 即可。&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#注意：TCPKeepAlive 必须打开，否则直接影响后面的设置。ClientAliveInterval 设置的值要小于各层防火墙的最小值，不然，也就没用了。&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;注意：最后要重启 sshd 服务才生效
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo /etc/init.d/ssh restart&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;修改客户端配置推荐&quot;&gt;修改客户端配置（推荐！！）&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vi ~/.ssh/config&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Host &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#表示需要启用该规则的服务端（域名或 ip）&lt;/span&gt;
  ServerAliveInterval 60 &lt;span class=&quot;c&quot;&gt;#表示没 60 秒去给服务端发起一次请求消息（这个设置好就行了）&lt;/span&gt;
  ServerAliveCountMax 3 &lt;span class=&quot;c&quot;&gt;#表示最大连续尝试连接次数（这个基本不用设置）&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;修改连接工具的配置&quot;&gt;修改连接工具的配置&lt;/h3&gt;
&lt;p&gt;通过改变连接工具的一些默认配置，把 keepalive 的配置打开起来即可：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;secureCRT：会话选项 - 终端 - 反空闲 - 发送 NO-OP 每 xxx 秒，设置一个非 0 值。&lt;/li&gt;
  &lt;li&gt;putty：Connection - Seconds between keepalive (0 to turn off)，设置一个非 0 值。&lt;/li&gt;
  &lt;li&gt;iTerm2：profiles - sessions - When idle - send ASCII code.&lt;/li&gt;
  &lt;li&gt;XShell：session properties - connection - Keep Alive - Send keep alive message while this session connected. Interval [xxx] sec.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;当然，用这个办法的副作用也是有的，比如 iTerm2 会出现一些并不想输入的字符、vim 会有些多余字符插入等等，这些情况就按个人的需要酌情取舍了。&lt;/p&gt;

&lt;h3 id=&quot;连接参数---o&quot;&gt;连接参数 - o&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ssh -o ServerAliveInterval=30 user@host&lt;/code&gt;&lt;/p&gt;</content><author><name>Lewin</name></author><category term="linux" /><category term="ssh" /><category term="timeout" /><summary type="html">现象 在使用 ssh 连接 Linux 之后，搁置一段时间会自动断开，ctrl + c 也没反应。</summary></entry><entry><title type="html">Linux systemd &amp;amp;&amp;amp; systemctl</title><link href="https://lewinz.org/2021/07/12/linux-systemctl/" rel="alternate" type="text/html" title="Linux systemd &amp;amp;&amp;amp; systemctl" /><published>2021-07-12T00:00:00+08:00</published><updated>2021-07-12T00:00:00+08:00</updated><id>https://lewinz.org/2021/07/12/linux-systemctl</id><content type="html" xml:base="https://lewinz.org/2021/07/12/linux-systemctl/">&lt;h2 id=&quot;systemd-文件夹配置文件夹&quot;&gt;systemd 文件夹配置文件夹&lt;/h2&gt;
&lt;p&gt;systemd 配置文件存在于以下三个文件夹中：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/systemd/system&lt;/code&gt; 存放系统启动的默认级别及启动的 unit 的软连接，优先级最高&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/run/systemd/system&lt;/code&gt; 系统执行过程中产生的服务脚本，优先级次之&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/usr/lib/systemd/system&lt;/code&gt; 存放系统上所有的启动文件。优先级最低&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;unit-分类&quot;&gt;unit 分类&lt;/h2&gt;
&lt;p&gt;unit 的定义文件可以根据其后缀名称识别其定义的类型，可以使用 systemctl -t help 查看。&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.servicre&lt;/code&gt; 定义了系统服务的启动&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.target&lt;/code&gt;  定义了系统启动的级别标签，systemd 没有运行级别的概念，创建标签只是为了兼容老版本。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.socket&lt;/code&gt; 定义了进程通信用到的套接字，套接字与进程是分离的&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.device&lt;/code&gt; 定义了系统启动时内核识别的文件，systemd 提供了设备的管理功能，/dev 下的设备由 /etc/udev/ 下的配置文件与.device 共同定制&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.mount&lt;/code&gt; 定义了系统的文件系统的挂载点&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.snapshop&lt;/code&gt; 系统快照&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.swap&lt;/code&gt; 用于标识 swap 设备&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.automount&lt;/code&gt; 文件系统的自动挂载点&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.path&lt;/code&gt; 用于定义文件系统中的一个文件或目录使用。常用于文件系统发生变化时，延迟激活服务。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;文件组成&quot;&gt;文件组成&lt;/h2&gt;
&lt;p&gt;文件通常由 3 段组成：&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Unit]

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;unit 的类型：service target socket]

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;unit&quot;&gt;[Unit]&lt;/h3&gt;
&lt;p&gt;不属于第二个标签的定义都放在这里，或存放不属于 unit 类型的定义，描述信息，依赖的 unit&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Description&lt;/code&gt;：描述信息&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;After&lt;/code&gt;：表明需要依赖的服务，作用决定启动顺序&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Before&lt;/code&gt;：表明被依赖的服务&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Requles&lt;/code&gt;：依赖到的其他 unit ，强依赖，即依赖的 unit 启动失败。该 unit 不启动。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Wants&lt;/code&gt;：依赖到的其他 unit，弱依赖，即依赖的 unit 启动失败。该 unit 继续启动&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Conflicts&lt;/code&gt;：定义冲突关系&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;unit-类型&quot;&gt;[Unit 类型]&lt;/h3&gt;
&lt;h4 id=&quot;service&quot;&gt;[Service]：&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;type&lt;/code&gt;：启动时关系的定义，
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;simple&lt;/code&gt;：(当设置了 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ExecStart=&lt;/code&gt; 、 但是没有设置 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Type=&lt;/code&gt; 与 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BusName=&lt;/code&gt; 时，这是默认值)， 那么 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ExecStart=&lt;/code&gt; 进程就是该服务的主进程&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;exec&lt;/code&gt;：与 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;simple&lt;/code&gt; 类似，不同之处在于， 只有在该服务的主服务进程执行完成之后，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;systemd&lt;/code&gt; 才会认为该服务启动完成。&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;forking&lt;/code&gt; ：&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;exec&lt;/code&gt; 启动的进程生成的其中一个子进程成为主进程，启动完成后，旧的主进程会退出。&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ontshot&lt;/code&gt;：启动下一个进程前主进程退出。&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dbus&lt;/code&gt;：与 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;simple&lt;/code&gt; 类似，不同之处在于， 该服务只有获得了 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BusName=&lt;/code&gt; 指定的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;D-Bus&lt;/code&gt; 名称之后，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;systemd&lt;/code&gt; 才会认为该服务启动完成，才会开始启动后继单元。&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;notify&lt;/code&gt;：与 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;exec&lt;/code&gt; 类似，不同之处在于， 该服务将会在启动完成之后通过 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sd_notify(3)&lt;/code&gt; 之类的接口发送一个通知消息&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ldle&lt;/code&gt;：与 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;simple&lt;/code&gt; 类似，不同之处在于， 服务进程将会被延迟到所有活动任务都完成之后再执行。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PIDFile&lt;/code&gt;：&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;type&lt;/code&gt; 字段如果设置为 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;forking&lt;/code&gt; ，建议同时设置 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PIDFile&lt;/code&gt; 选项，以帮助 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;systemd&lt;/code&gt; 准确可靠的定位该服务的主进程。 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;systemd&lt;/code&gt; 将会在父进程退出之后 立即开始启动后继单元。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;EnvironmentFile&lt;/code&gt;：指定当前服务的环境参数文件。该文件内部的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;key=value&lt;/code&gt; 键值对，可以用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$key&lt;/code&gt; 的形式，在当前配置文件中获取。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ExecStart&lt;/code&gt;：启动服务需要执行的命令&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ExecStartpre&lt;/code&gt;：启动服务之前执行的命令&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ExecStartpost&lt;/code&gt;：启动服务之后执行的命令&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ExecStop&lt;/code&gt;：停止服务时执行的命令&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Restart&lt;/code&gt;：定义启动进程时执行的命令&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ExecReload&lt;/code&gt;：重启服务时执行的命令&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;KillMode&lt;/code&gt;：定义如何停止服务
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;control-group&lt;/code&gt;（默认值）：当前控制组里面的所有子进程，都会被杀掉&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;process&lt;/code&gt;：只杀主进程&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mixed&lt;/code&gt;：主进程将收到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SIGTERM&lt;/code&gt; 信号，子进程收到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SIGKILL&lt;/code&gt; 信号&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;none&lt;/code&gt;：没有进程会被杀掉，只是执行服务的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;stop&lt;/code&gt; 命令。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RestartSec&lt;/code&gt;：表示重启服务之前，需要等待的秒数。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;install&quot;&gt;[install]&lt;/h4&gt;
&lt;p&gt;定义如何安装这个配置文件，即怎样做到开机启动&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Alias&lt;/li&gt;
  &lt;li&gt;RequlredBy: 被那些 unit 所依赖，&lt;/li&gt;
  &lt;li&gt;WanteBy: 表示该服务所在的 Target，含义是服务组，表示一组服务。WantedBy=multi-user.target 指的是，sshd 所在的 Target 是 multi-user.target。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;systemctl-命令&quot;&gt;systemctl 命令&lt;/h2&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 列出正在运行的Unit&lt;/span&gt;
systemctl list-units，可以直接使用systemctl

&lt;span class=&quot;c&quot;&gt;# 列出所有Unit，包括没有找到配置文件的或者启动失败的&lt;/span&gt;
systemctl list-units &lt;span class=&quot;nt&quot;&gt;--all&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 列出所有没有运行的 Unit&lt;/span&gt;
systemctl list-units &lt;span class=&quot;nt&quot;&gt;--all&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--state&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;inactive

&lt;span class=&quot;c&quot;&gt;# 列出所有加载失败的 Unit&lt;/span&gt;
systemctl list-units &lt;span class=&quot;nt&quot;&gt;--failed&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 列出所有正在运行的、类型为service的Unit&lt;/span&gt;
systemctl list-units &lt;span class=&quot;nt&quot;&gt;--type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;service

&lt;span class=&quot;c&quot;&gt;# 显示某个 Unit 是否正在运行&lt;/span&gt;
systemctl is-active application.service

&lt;span class=&quot;c&quot;&gt;# 显示某个 Unit 是否处于启动失败状态&lt;/span&gt;
systemctl is-failed application.service

&lt;span class=&quot;c&quot;&gt;# 显示某个 Unit 服务是否建立了启动链接&lt;/span&gt;
systemctl is-enabled application.service

&lt;span class=&quot;c&quot;&gt;# 立即启动一个服务&lt;/span&gt;
systemctl start apache.service

&lt;span class=&quot;c&quot;&gt;# 立即停止一个服务&lt;/span&gt;
systemctl stop apache.service

&lt;span class=&quot;c&quot;&gt;# 重启一个服务&lt;/span&gt;
systemctl restart apache.service

&lt;span class=&quot;c&quot;&gt;# 重新加载一个服务的配置文件&lt;/span&gt;
systemctl reload apache.service

&lt;span class=&quot;c&quot;&gt;# 重载所有修改过的配置文件&lt;/span&gt;
systemctl daemon-reload
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;注意事项&quot;&gt;注意事项&lt;/h2&gt;
&lt;p&gt;注：修改了的 unit 文件 需要重载。&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;systemctl daemon-reload&lt;/code&gt;&lt;/p&gt;</content><author><name>Lewin</name></author><category term="linux" /><category term="自启动" /><category term="systemd" /><category term="systemctl" /><summary type="html">systemd 文件夹配置文件夹 systemd 配置文件存在于以下三个文件夹中：</summary></entry><entry><title type="html">frp 搭建过程记录</title><link href="https://lewinz.org/2021/07/10/frp-install/" rel="alternate" type="text/html" title="frp 搭建过程记录" /><published>2021-07-10T00:00:00+08:00</published><updated>2021-07-10T00:00:00+08:00</updated><id>https://lewinz.org/2021/07/10/frp-install</id><content type="html" xml:base="https://lewinz.org/2021/07/10/frp-install/">&lt;p&gt;Emmm… 本来以为会有繁琐的配置，结果开箱即用&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/fatedier/frp&quot;&gt;GitHub地址&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://gofrp.org/docs/&quot;&gt;中文文档&lt;/a&gt;&lt;/p&gt;</content><author><name>Lewin</name></author><category term="frp" /><category term="搭建" /><summary type="html">Emmm… 本来以为会有繁琐的配置，结果开箱即用</summary></entry><entry><title type="html">Ubuntu 20.04 设置 root 登录图形界面</title><link href="https://lewinz.org/2021/07/06/ubuntu-root-login-x-window/" rel="alternate" type="text/html" title="Ubuntu 20.04 设置 root 登录图形界面" /><published>2021-07-06T00:00:00+08:00</published><updated>2021-07-06T00:00:00+08:00</updated><id>https://lewinz.org/2021/07/06/ubuntu-root-login-x-window</id><content type="html" xml:base="https://lewinz.org/2021/07/06/ubuntu-root-login-x-window/">&lt;p&gt;Ubuntu 默认是关闭 root 账户登录图形界面的&lt;/p&gt;

&lt;h3 id=&quot;修改-root-账号密码&quot;&gt;修改 root 账号密码&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo passwd root&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;修改配置文件&quot;&gt;修改配置文件&lt;/h3&gt;
&lt;h4 id=&quot;修改-50-ubuntuconf&quot;&gt;修改 50-ubuntu.conf&lt;/h4&gt;
&lt;p&gt;执行 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo vim /usr/share/lightdm/lightdm.conf.d/50-ubuntu.conf&lt;/code&gt; 把配置改为如下所示&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Seat:&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
user-session&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ubuntu
greeter-show-manual-login&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;修改-gdm-autologin-和-gdm-password&quot;&gt;修改 gdm-autologin 和 gdm-password&lt;/h4&gt;
&lt;p&gt;执行 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo vim /etc/pam.d/gdm-autologin&lt;/code&gt; 注释掉 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;auth required pam_succeed_if.so user != root quiet_success&lt;/code&gt; 这一行 (第三行左右)&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#%PAM-1.0&lt;/span&gt;
auth    requisite       pam_nologin.so
&lt;span class=&quot;c&quot;&gt;#auth   required        pam_succeed_if.so user != root quiet_success&lt;/span&gt;
auth    optional        pam_gdm.so
auth    optional        pam_gnome_keyring.so
auth    required        pam_permit.so
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;执行 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo vim /etc/pam.d/gdm-password&lt;/code&gt; 注释掉 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;auth required pam_succeed_if.so user != root quiet_success&lt;/code&gt; 这一行 (第三行左右)&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#%PAM-1.0&lt;/span&gt;
auth    requisite       pam_nologin.so
&lt;span class=&quot;c&quot;&gt;#auth   required        pam_succeed_if.so user != root quiet_success&lt;/span&gt;
@include common-auth
auth    optional        pam_gnome_keyring.so
@include common-account
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;修改-rootprofile-文件&quot;&gt;修改 /root/.profile 文件&lt;/h4&gt;
&lt;p&gt;执行 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo vim/root/.profile&lt;/code&gt; 修改配置文件如下&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# ~/.profile: executed by Bourne-compatible login shells.&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$BASH&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
  if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; ~/.bashrc &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; ~/.bashrc
  &lt;span class=&quot;k&quot;&gt;fi
fi
&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;tty&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; mesg n &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true
&lt;/span&gt;mesg n &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;重启生效使用-root-登录&quot;&gt;重启生效，使用 root 登录&lt;/h3&gt;</content><author><name>Lewin</name></author><category term="ubuntu" /><category term="root" /><category term="login" /><summary type="html">Ubuntu 默认是关闭 root 账户登录图形界面的</summary></entry><entry><title type="html">Golang 内联优化</title><link href="https://lewinz.org/2021/07/05/go-inline-optmization/" rel="alternate" type="text/html" title="Golang 内联优化" /><published>2021-07-05T00:00:00+08:00</published><updated>2021-07-05T00:00:00+08:00</updated><id>https://lewinz.org/2021/07/05/go-inline-optmization</id><content type="html" xml:base="https://lewinz.org/2021/07/05/go-inline-optmization/">&lt;p&gt;为了保证程序的执行高效与安全，现代编译器并不会将程序员的代码直接翻译成相应地机器码，它需要做一系列的检查与优化。Go 编译器默认做了很多相关工作，例如未使用的引用包检查、未使用的声明变量检查、有效的括号检查、逃逸分析、内联优化、删除无用代码等。本文重点讨论内联优化相关内容。&lt;/p&gt;

&lt;h2 id=&quot;内联&quot;&gt;内联&lt;/h2&gt;
&lt;p&gt;在 Go 中，一个 goroutine 会有一个单独的栈，栈又会包含多个栈帧，栈帧是函数调用时在栈上为函数所分配的区域。但其实，函数调用是存在一些固定开销的，例如维护帧指针寄存器 BP、栈溢出检测等。因此，对于一些代码行比较少的函数，编译器倾向于将它们在编译期展开从而消除函数调用，这种行为就是内联。&lt;/p&gt;

&lt;p&gt;性能对比
首先，看一下函数内联与非内联的性能差异。&lt;/p&gt;
&lt;div class=&quot;language-golang highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;//go:noinline&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;maxNoinline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;maxInline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BenchmarkNoInline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;testing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ResetTimer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;maxNoinline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BenchmarkInline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;testing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ResetTimer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;maxInline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;在程序代码中，想要禁止编译器内联优化很简单，在函数定义前一行添加 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;//go:noinline&lt;/code&gt; 即可。以下是性能对比结果&lt;/p&gt;
&lt;div class=&quot;language-golang highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;BenchmarkNoInline&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;8&lt;/span&gt;     &lt;span class=&quot;m&quot;&gt;824031799&lt;/span&gt;                &lt;span class=&quot;m&quot;&gt;1.47&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;op&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;BenchmarkInline&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;8&lt;/span&gt;       &lt;span class=&quot;m&quot;&gt;1000000000&lt;/span&gt;               &lt;span class=&quot;m&quot;&gt;0.255&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;op&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;因为函数体内部的执行逻辑非常简单，此时内联与否的性能差异主要体现在函数调用的固定开销上。显而易见，该差异是非常大的。&lt;/p&gt;

&lt;h3 id=&quot;内联场景&quot;&gt;内联场景&lt;/h3&gt;
&lt;p&gt;此时，爱思考的读者可能就会产生疑问：既然内联优化效果这么显著，是不是所有的函数调用都可以内联呢？答案是不可以。因为内联，其实就是将一个函数调用原地展开，替换成这个函数的实现。当该函数被多次调用，就会被多次展开，这会增加编译后二进制文件的大小。而非内联函数，只需要保存一份函数体的代码，然后进行调用。所以，在空间上，一般来说使用内联函数会导致生成的可执行文件变大（但需要考虑内联的代码量、调用次数、维护内联关系的开销）。&lt;/p&gt;

&lt;p&gt;问题来了，编译器内联优化的选择策略是什么？&lt;/p&gt;
&lt;div class=&quot;language-golang highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;假设源码文件为 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main.go&lt;/code&gt;，可通过执行 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;go build -gcflags=&quot;-m -m&quot; main.go&lt;/code&gt; 命令查看编译器的优化策略。&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;go build &lt;span class=&quot;nt&quot;&gt;-gcflags&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;-m -m&quot;&lt;/span&gt; main.go
&lt;span class=&quot;c&quot;&gt;# command-line-arguments&lt;/span&gt;
./main.go:3:6: can inline add with cost 4 as: func&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;int, int&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; int &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return &lt;/span&gt;a + b &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
./main.go:7:6: cannot inline iter: unhandled op FOR
./main.go:10:12: inlining call to add func&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;int, int&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; int &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return &lt;/span&gt;a + b &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
./main.go:15:6: can inline main with cost 67 as: func&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; n :&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 100&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; _ &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; iter&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;n&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;通过以上信息，可知编译器判断 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;add&lt;/code&gt; 函数与 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main&lt;/code&gt; 函数都可以被内联优化，并将 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;add&lt;/code&gt; 函数内联。同时可以注意到的是，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;iter&lt;/code&gt; 函数由于存在循环语句并不能被内联：&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cannot inline iter: unhandled op FOR&lt;/code&gt;。实际上，除了 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;for&lt;/code&gt; 循环，还有一些情况不会被内联，例如闭包，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;select&lt;/code&gt;，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;for&lt;/code&gt;，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;defer&lt;/code&gt;，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;go&lt;/code&gt; 关键字所开启的新 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;goroutine&lt;/code&gt; 等，详细可见 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/cmd/compile/internal/gc/inl.go&lt;/code&gt; 相关内容。&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; OCLOSURE,
        OCALLPART,
        ORANGE,
        OFOR,
        OFORUNTIL,
        OSELECT,
        OTYPESW,
        OGO,
        ODEFER,
        ODCLTYPE, // can&lt;span class=&quot;s1&quot;&gt;'t print yet
        OBREAK,
        ORETJMP:
        v.reason = &quot;unhandled op &quot; + n.Op.String()
        return true
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;在上文提到过，内联只针对小代码量的函数而言，那么到底是小于多少才算是小代码量呢？&lt;/p&gt;

&lt;p&gt;此时，我将上面的 add 函数，更改为如下内容&lt;/p&gt;
&lt;div class=&quot;language-golang highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;执行 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;go build -gcflags=&quot;-m -m&quot; main.go&lt;/code&gt; 命令，得到信息&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./main.go:3:6: can inline add with cost 9 as: func&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;int, int&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; int &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; a &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; a + 1&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return &lt;/span&gt;a + b &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;对比之前的信息&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./main.go:3:6: can inline add with cost 4 as: func&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;int, int&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; int &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return &lt;/span&gt;a + b &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;可以发现，存在 cost 4 与 cost 9 的区别。这里的数值代表的是抽象语法树 AST 的节点，a = a + 1 包含的是 5 个节点。Go 函数中超过 80 个节点的代码量就不再内联。例如，如果在 add 中写入 16 个 a = a + 1，则不再内联。&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./main.go:3:6: cannot inline add: &lt;span class=&quot;k&quot;&gt;function &lt;/span&gt;too complex: cost 84 exceeds budget 80
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;内联表&quot;&gt;内联表&lt;/h3&gt;
&lt;p&gt;内联会将函数调用的过程抹掉，这会引入一个新的问题：代码的堆栈信息还能否保证。举个例子，如果程序发生 panic，内联之后的程序，还能否准确的打印出堆栈信息？看以下例子。&lt;/p&gt;
&lt;div class=&quot;language-golang highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;panic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;i am a panic information&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;sub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;在该代码样例中，max 函数将被内联。执行程序，输出结果如下&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;panic: i am a panic information

goroutine 1 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;running]:
main.sub&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;...&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        /Users/slp/go/src/workspace/example/main.go:5
main.max&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;...&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        /Users/slp/go/src/workspace/example/main.go:10
main.main&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
        /Users/slp/go/src/workspace/example/main.go:17 +0x3a
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;我们可以发现，panic 依然输出了正确的程序堆栈信息，包括源文件位置和行号信息。那，Go 是如何做到的呢？这是由于 Go 内部会为每个存在内联优化的 goroutine 维持一个内联树（inlining tree），该树可通过 go build -gcflags=”-d pctab=pctoinline” main.go 命令查看&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;funcpctab &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;.sub &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;valfunc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;pctoinline]
...
wrote 3 bytes to 0xc000082668
 00 42 00
funcpctab &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;.max &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;valfunc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;pctoinline]
...
wrote 7 bytes to 0xc000082f68
 00 3c 02 1d 01 09 00
&lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; inlining tree &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;.max:
0 | &lt;span class=&quot;nt&quot;&gt;-1&lt;/span&gt; | &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;.sub &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;/Users/slp/go/src/workspace/example/main.go:10:6&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;pc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;59
&lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt;
funcpctab &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;.main &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;valfunc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;pctoinline]
...
wrote 11 bytes to 0xc0004807e8
 00 1d 02 01 01 07 04 16 03 0c 00
&lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; inlining tree &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;.main:
0 | &lt;span class=&quot;nt&quot;&gt;-1&lt;/span&gt; | &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;.max &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;/Users/slp/go/src/workspace/example/main.go:17:9&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;pc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;30
1 | 0 | &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;.sub &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;/Users/slp/go/src/workspace/example/main.go:10:6&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;pc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;29
&lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;内联控制&quot;&gt;内联控制&lt;/h3&gt;
&lt;p&gt;Go 程序编译时，默认将进行内联优化。我们可通过 -gcflags=”-l” 选项全局禁用内联，与一个 -l 禁用内联相反，如果传递两个或两个以上的 -l 则会打开内联，并启用更激进的内联策略。如果不想全局范围内禁止优化，则可以在函数定义时添加 //go:noinline 编译指令来阻止编译器内联函数。&lt;/p&gt;</content><author><name>Lewin</name></author><category term="golang" /><category term="inline optimization" /><category term="内联优化" /><summary type="html">为了保证程序的执行高效与安全，现代编译器并不会将程序员的代码直接翻译成相应地机器码，它需要做一系列的检查与优化。Go 编译器默认做了很多相关工作，例如未使用的引用包检查、未使用的声明变量检查、有效的括号检查、逃逸分析、内联优化、删除无用代码等。本文重点讨论内联优化相关内容。</summary></entry><entry><title type="html">物理机安装 Ubuntu</title><link href="https://lewinz.org/2021/07/03/install-ubuntu-boot/" rel="alternate" type="text/html" title="物理机安装 Ubuntu" /><published>2021-07-03T00:00:00+08:00</published><updated>2021-07-03T00:00:00+08:00</updated><id>https://lewinz.org/2021/07/03/install-ubuntu-boot</id><content type="html" xml:base="https://lewinz.org/2021/07/03/install-ubuntu-boot/">&lt;h2 id=&quot;启动-u-盘制作&quot;&gt;启动 U 盘制作&lt;/h2&gt;
&lt;h3 id=&quot;下载官方镜像&quot;&gt;下载官方镜像&lt;/h3&gt;
&lt;p&gt;目前稳定的长期支持的版本是 Ubuntu 16.04.3 LTS 。&lt;/p&gt;

&lt;p&gt;下载地址：&lt;br /&gt;
官网：&lt;a href=&quot;https://www.ubuntu.com/download/desktop&quot;&gt;https://www.ubuntu.com/download/desktop&lt;/a&gt;&lt;br /&gt;
镜像：&lt;a href=&quot;http://mirrors.163.com/ubuntu-releases/16.04.3/&quot;&gt;http://mirrors.163.com/ubuntu-releases/16.04.3/&lt;/a&gt;&lt;br /&gt;
选择国内的镜像源下载&lt;/p&gt;

&lt;h3 id=&quot;下载-rufus&quot;&gt;下载 Rufus&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/Lewinz/lewinz.github.io@master/images/posts/ubuntu_install_1.png&quot; alt=&quot;ubuntui_install&quot; /&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;设置项&lt;/th&gt;
      &lt;th&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;设备&lt;/td&gt;
      &lt;td&gt;选择你的 U 盘，为了避免选错，只插一个 U 盘&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;分区方案和目标系统类型&lt;/td&gt;
      &lt;td&gt;如果电脑启动方式是 UEFI 的，则选带 UEFI 的那个；如果是 BIOS 的，则选兼容 BIOS 的&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;文件系统&lt;/td&gt;
      &lt;td&gt;默认 FAT32 即可&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;簇大小&lt;/td&gt;
      &lt;td&gt;默认即可&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;新卷标&lt;/td&gt;
      &lt;td&gt;设置 U 盘的名称，这一项在选择 Ubuntu 的 iso 文件之后会自动修改&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&quot;文件格式差异&quot;&gt;文件格式差异&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Fat32 文件格式是一种通用格式，任何 USB 存储设备都会预装该文件系统，可以在任何操作系统平台上使用。最主要的缺陷是只支持最大单文件大小容量为 4GB，因此日常使用没有问题，只有在传输大文件时才会显现出缺点。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;exFAT 文件是微软自家创建的用来取代 FAT32 文件格式的新型文件格式，它最大可以支持 1EB 的文件大小，非常适合用来存储大容量文件，还可以在 Mac 和 Windows 操作系统上通用。虽然是微软的技术，苹果批准在系统中使用该文件格式，因此在 Mac 系统中格式化存储设备时会出现 exFAT 文件格式选项。最大的缺点是没有文件日志功能，这样就不能记录磁盘上文件的修改记录。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;NTFS 是微软为硬盘或固态硬盘（SSD）创建的默认新型文件系统，NTFS 的含义是 New Technology File System，它基层了所有文件系统的优点：日志功能、无文件大小限制、支持文件压缩和长文件名、服务器文件管理权限等。最大的缺点是 Mac 系统只能读取 NTFS 文件但没有权限写入，需要借助第三方工具才能实现。因此跨平台的功能非常差。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;簇大小&quot;&gt;簇大小&lt;/h4&gt;
&lt;p&gt;簇是系统可以识别的最小单位。也就是对于文件，占用的簇数量都是整数，也就是不会有两个文件占用一个簇的情况发生。&lt;/p&gt;

&lt;p&gt;每个簇可以包括 2、4、8、16、32 或 64 个扇区。显然，簇是操作系统所使用的逻辑概念，而非磁盘的物理特性。&lt;/p&gt;

&lt;p&gt;为了更好地管理磁盘空间和更高效地从硬盘读取数据，操作系统规定一个簇中只能放置一个文件的内容，因此文件所占用的空间，只能是簇的整数倍；如果文件实际大小小于一簇，它也要占一簇的空间。如果文件实际大小大于一簇，根据逻辑推算，那么该文件就要占两个簇的空间。&lt;/p&gt;

&lt;h2 id=&quot;出现问题&quot;&gt;出现问题&lt;/h2&gt;
&lt;h3 id=&quot;安装-ubuntu-后无可引导设备&quot;&gt;安装 Ubuntu 后无可引导设备&lt;/h3&gt;
&lt;p&gt;我的安装设备是弘基笔记本，具体型号忘记了（多年前使用的电脑，一直闲置），安装完 Ubuntu 之后出现无可引导设备（no bootable device found）错误&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/Lewinz/lewinz.github.io@master/images/posts/ubuntu_install_2.jpg&quot; alt=&quot;ubuntui_install&quot; /&gt;&lt;/p&gt;

&lt;p&gt;起初怀疑是制作启动 U 盘有问题（最开始是在 mac 上用命令行写到 U 盘上的），但换了好几次 U 盘制作工具之后，依旧无果，甚至将 CentOS 安装好一次之后，排除是启动 U 盘的问题&lt;/p&gt;

&lt;p&gt;最后打开 bios 发现是安全引导（Secure boot）没有关闭&lt;/p&gt;

&lt;p&gt;解决：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;进入 bios 界面，在 Boot 标签页安全引导 (Secure Boot) 并关闭&lt;/li&gt;
  &lt;li&gt;进入到 Security 标签，找到 “选择一个用于执行的可信任 UEFI 文件 (Select an UEFI file as trusted for executing) ” 并敲击回车。&lt;/li&gt;
  &lt;li&gt;在这里你可以看到你的硬盘，例如 HDD0。如果你有多块硬盘，我希望你记住你安装 Ubuntu 的那块。同样敲击回车。&lt;/li&gt;
  &lt;li&gt;选择 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;EFI&amp;gt;&lt;/code&gt; -&amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;ubuntu&amp;gt;&lt;/code&gt; -&amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;shimx64.efi&amp;gt;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;保存后重启解决&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;扩展&quot;&gt;扩展&lt;/h2&gt;
&lt;h3 id=&quot;centos-安装-x-window&quot;&gt;CentOS 安装 x-window&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;首先安装 X (X Window System)&lt;/strong&gt;&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yum groupinstall &quot;X Window System&quot; -y&lt;/code&gt; 注意有引号&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;安装 GNOME&lt;/strong&gt;&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yum grouplist&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/Lewinz/lewinz.github.io@master/images/posts/ubuntu_install_3.png&quot; alt=&quot;ubuntui_install&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yum groupinstall &quot;GNOME Desktop&quot; &quot;Graphical Administration Tools&quot; -y&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;安装完成之后可以使用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;startx&lt;/code&gt; 进入图形化界面&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;设置启动默认使用图形化界面&lt;/strong&gt;&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ln -sf /lib/systemd/system/runlevel5.target /etc/systemd/system/default.target&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;参考链接&quot;&gt;参考链接&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.jianshu.com/p/54d9a3a695cc?tdsourcetag=s_pctim_aiomsg&quot;&gt;https://www.jianshu.com/p/54d9a3a695cc?tdsourcetag=s_pctim_aiomsg&lt;/a&gt;&lt;/p&gt;</content><author><name>Lewin</name></author><category term="install" /><category term="ubuntu" /><summary type="html">启动 U 盘制作 下载官方镜像 目前稳定的长期支持的版本是 Ubuntu 16.04.3 LTS 。</summary></entry><entry><title type="html">负载均衡-四层负载与七层负载</title><link href="https://lewinz.org/2021/07/02/lvs-loading-blance/" rel="alternate" type="text/html" title="负载均衡-四层负载与七层负载" /><published>2021-07-02T00:00:00+08:00</published><updated>2021-07-02T00:00:00+08:00</updated><id>https://lewinz.org/2021/07/02/lvs-loading-blance</id><content type="html" xml:base="https://lewinz.org/2021/07/02/lvs-loading-blance/">&lt;h2 id=&quot;什么是负载均衡&quot;&gt;什么是负载均衡&lt;/h2&gt;
&lt;p&gt;负载均衡（Load Balance）建立在现有网络结构之上，它提供了一种廉价有效透明的方法扩展网络设备和服务器的带宽、增加吞吐量、加强网络数据处理能力、提高网络的灵活性和可用性。负载均衡有两方面的含义：首先，大量的并发访问或数据流量分担到多台节点设备上分别处理，减少用户等待响应的时间；其次，单个重负载的运算分担到多台节点设备上做并行处理，每个节点设备处理结束后，将结果汇总，返回给用户，系统处理能力得到大幅度提高。&lt;/p&gt;

&lt;p&gt;简单来说就是：其一是将大量的并发处理转发给后端多个节点处理，减少工作响应时间；其二是将单个繁重的工作转发给后端多个节点处理，处理完再返回给负载均衡中心，再返回给用户。目前负载均衡技术大多数是用于提高诸如在 Web 服务器、FTP 服务器和其它关键任务服务器上的 Internet 服务器程序的可用性和可伸缩性。&lt;/p&gt;

&lt;h2 id=&quot;负载均衡分类&quot;&gt;负载均衡分类&lt;/h2&gt;
&lt;h3 id=&quot;二层负载均衡mac&quot;&gt;二层负载均衡（mac）&lt;/h3&gt;
&lt;p&gt;根据&lt;a href=&quot;https://lewinz.org/2021/07/01/osi-tcp-ip/&quot;&gt; OSI 模型&lt;/a&gt;分的二层负载，一般是用虚拟 mac 地址方式，外部对虚拟 MAC 地址请求，负载均衡接收后分配后端实际的 MAC 地址响应&lt;/p&gt;

&lt;h3 id=&quot;三层负载均衡ip&quot;&gt;三层负载均衡（ip）&lt;/h3&gt;
&lt;p&gt;一般采用虚拟 IP 地址方式，外部对虚拟的 ip 地址请求，负载均衡接收后分配后端实际的 IP 地址响应. (即一个 ip 对一个 ip 的转发，端口全放开)&lt;/p&gt;

&lt;h3 id=&quot;四层负载均衡tcp&quot;&gt;四层负载均衡（tcp）&lt;/h3&gt;
&lt;p&gt;在三次负载均衡的基础上，即从第四层 “传输层” 开始，使用 “ip+port” 接收请求，再转发到对应的机器。&lt;/p&gt;

&lt;h3 id=&quot;七层负载均衡http&quot;&gt;七层负载均衡（http）&lt;/h3&gt;
&lt;p&gt;从第七层 “应用层” 开始，根据虚拟的 url 或 IP，主机名接收请求，再转向相应的处理服务器。&lt;/p&gt;

&lt;h3 id=&quot;比较常见的是四层负载与七层负载&quot;&gt;比较常见的是四层负载与七层负载&lt;/h3&gt;
&lt;h4 id=&quot;四层的负载均衡就是基于-ip--端口的负载均衡&quot;&gt;四层的负载均衡就是基于 IP + 端口的负载均衡&lt;/h4&gt;
&lt;p&gt;在三层负载均衡的基础上，通过发布三层的 IP 地址（VIP），然后加四层的端口号，来决定哪些流量需要做负载均衡，对需要处理的流量进行 NAT 处理，转发至后台服务器，并记录下这个 TCP 或者 UDP 的流量是由哪台服务器处理的，后续这个连接的所有流量都同样转发到同一台服务器处理。&lt;/p&gt;

&lt;p&gt;对应的负载均衡器称为四层交换机（L4 switch），主要分析 IP 层及 TCP/UDP 层，实现四层负载均衡。此种负载均衡器不理解应用协议（如 HTTP/FTP/MySQL 等等）。&lt;/p&gt;

&lt;p&gt;实现四层负载均衡的有：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;F5：硬件负载均衡器，功能很好，但是成本很高。&lt;/li&gt;
  &lt;li&gt;LVS：重量级的四层负载软件&lt;/li&gt;
  &lt;li&gt;Nginx：轻量级的四层负载软件，带缓存功能，正则表达式较灵活&lt;/li&gt;
  &lt;li&gt;HaProxy：模拟四层转发，较灵活&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;七层的负载均衡就是基于虚拟的-url-或主机-ip-的负载均衡&quot;&gt;七层的负载均衡就是基于虚拟的 URL 或主机 IP 的负载均衡&lt;/h4&gt;
&lt;p&gt;在四层负载均衡的基础上（没有四层是绝对不可能有七层的），再考虑应用层的特征，比如同一个 Web 服务器的负载均衡，除了根据 VIP 加 80 端口辨别是否需要处理的流量，还可根据七层的 URL、浏览器类别、语言来决定是否要进行负载均衡。举个例子，如果你的 Web 服务器分成两组，一组是中文语言的，一组是英文语言的，那么七层负载均衡就可以当用户来访问你的域名时，自动辨别用户语言，然后选择对应的语言服务器组进行负载均衡处理。&lt;/p&gt;

&lt;p&gt;对应的负载均衡器称为七层交换机（L7 switch），除了支持四层负载均衡以外，还有分析应用层的信息，如 HTTP 协议 URI 或 Cookie 信息，实现七层负载均衡。此种负载均衡器能理解应用协议。&lt;/p&gt;

&lt;p&gt;实现七层负载均衡的软件有：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;HaProxy：天生负载均衡技能，全面支持七层代理，会话保持，标记，路径转移；&lt;/li&gt;
  &lt;li&gt;Hginx：只在 http 协议和 mail 协议上功能比较好，性能与 haproxy 差不多；&lt;/li&gt;
  &lt;li&gt;apache：功能较差&lt;/li&gt;
  &lt;li&gt;Mysql proxy：功能尚可。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;总的来说，一般是 lvs 做 4 层负载；nginx 做 7 层负载 (也能做 4 层负载，通过 stream 模块)；haproxy 比较灵活，4 层和 7 层负载均衡都能做&lt;/p&gt;

&lt;h2 id=&quot;四层负载与七层负载的区别&quot;&gt;四层负载与七层负载的区别&lt;/h2&gt;
&lt;h3 id=&quot;从技术原理上分析&quot;&gt;从技术原理上分析&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;所谓四层负载均衡&lt;/strong&gt;，也就是主要通过报文中的目标地址和端口，再加上负载均衡设备设置的服务器选择方式，决定最终选择的内部服务器。&lt;/p&gt;

&lt;p&gt;以常见的 TCP 为例，负载均衡设备在接收到第一个来自客户端的 SYN 请求时，即通过上述方式选择一个最佳的服务器，并对报文中目标 IP 地址进行修改 (改为后端服务器 IP），直接转发给该服务器。TCP 的连接建立，即三次握手是客户端和服务器直接建立的，负载均衡设备只是起到一个类似路由器的转发动作。在某些部署情况下，为保证服务器回包可以正确返回给负载均衡设备，在转发报文的同时可能还会对报文原来的源地址进行修改。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/Lewinz/lewinz.github.io@master/images/posts/lvs_loading_blance_1.png&quot; alt=&quot;lvs-loading-glance&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;所谓七层负载均衡&lt;/strong&gt;，也称为 “内容交换”，也就是主要通过报文中的真正有意义的应用层内容，再加上负载均衡设备设置的服务器选择方式，决定最终选择的内部服务器。&lt;/p&gt;

&lt;p&gt;以常见的 TCP 为例，负载均衡设备如果要根据真正的应用层内容再选择服务器，只能先代理最终的服务器和客户端建立连接 (三次握手) 后，才可能接受到客户端发送的真正应用层内容的报文，然后再根据该报文中的特定字段，再加上负载均衡设备设置的服务器选择方式，决定最终选择的内部服务器。负载均衡设备在这种情况下，更类似于一个代理服务器。负载均衡和前端的客户端以及后端的服务器会分别建立 TCP 连接。所以从这个技术原理上来看，七层负载均衡明显的对负载均衡设备的要求更高，处理七层的能力也必然会低于四层模式的部署方式。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/Lewinz/lewinz.github.io@master/images/posts/lvs_loading_blance_2.png&quot; alt=&quot;lvs-loading-glance&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;四层负载均衡&lt;/strong&gt;在中间传输层执行，它处理消息的传递，但不考虑消息的内容。例如 TCP 是网络上 Hypertext Transfer Protocol（HTTP）流量的第四层协议。在这一过程中，4 层负载均衡会将网络数据包转发到上游服务器，但不会检查数据包的内容，只能通过检查 TCP 流中的前几个包来做出有限的路由决策。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;七层负载均衡&lt;/strong&gt;不同于四层负载均衡，它在高级应用层上执行，会处理每个消息的实际内容。HTTP 是网络上网站流量的主要 7 层协议。七层负载均衡以比四层负载均衡更复杂的方式路由网络流量，尤其适用于基于 TCP 的流量（如 HTTP）。七层负载均衡会终止网络流量并读取器中消息，它可以根据消息内容（如 URL 或 cookie）做出负载均衡决策。随后，七层负载均衡与选定上有服务器建立新的 TCP 连接并将请求写入服务器。&lt;/p&gt;

&lt;h4 id=&quot;区别&quot;&gt;区别&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;七层负载均衡基本都是基于 http 协议的，适用于 web 服务器的负载均衡。（nginx）&lt;/li&gt;
  &lt;li&gt;四层负载均衡主要是基于 tcp 协议报文，可以做任何基于 tcp/ip 协议的软件的负载均衡。(haproxy、LVS)&lt;/li&gt;
  &lt;li&gt;两者主要区别在于利用的报文所在的层面是不同的，各有各的好处。&lt;/li&gt;
  &lt;li&gt;七层应用负载的好处，是使得整个网络更” 智能化 “。例如访问一个网站的用户流量，可以通过七层的方式，将对图片类的请求转发到特定的图片服务器并可以使用缓存技术；将对文字类的请求可以转发到特定的文字服务器并可以使用压缩技术。当然这只是七层应用的一个小案例，从技术原理上，这种方式可以对客户端的请求和服务器的响应进行任意意义上的修改，极大的提升了应用系统在网络层的灵活性。很多在后台，例如 Nginx 或者 Apache 上部署的功能可以前移到负载均衡设备上，例如客户请求中的 Header 重写，服务器响应中的关键字过滤或者内容插入等功能。&lt;/li&gt;
  &lt;li&gt;四层负载均衡主要是较为灵活，可以作为多种软件的负载均衡器。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;举个例子形象的说明：四层负载均衡就像银行的自助排号机，每一个达到银行的客户根据排号机的顺序，选择对应的窗口接受服务；而七层负载均衡像银行大堂经理，先确认客户需要办理的业务，再安排排号。这样办理理财、存取款等业务的客户，会根据银行内部资源得到统一协调处理，加快客户业务办理流程。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/Lewinz/lewinz.github.io@master/images/posts/lvs_loading_blance_3.png&quot; alt=&quot;lvs-loading-glance&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;七层负载均衡的好处&quot;&gt;七层负载均衡的好处&lt;/h4&gt;
&lt;p&gt;七层负载均衡比基于数据包的四层负载均衡更占 CPU，但很少会导致服务器性能下降。七层负载均衡可以让负载均衡器做出更明智的决策，并可以对内容进行优化和更改，如压缩、加密等等。七层负载均衡还可以利用 buffering 来卸载上游服务器的慢速连接，从而提高性能。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;执行七层负载平衡的组件通常被称为反向代理服务器。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;七层负载均衡示例
举个简单的例子，假设用户访问高流量网站，在会话期间，它可能会请求静态内容（例如图像或视频）、动态内容（例如新闻订阅源）或者交易信息（例如订单状态）等等。7 层负载平衡允许负载均衡器根据请求本身中的消息（如内容类型）来路由请求。也就是说，我们可以将对图像或视频的请求路由到存储它的服务器，并进行高度优化以提供多媒体内容；可以将诸如折扣价之类的交易信息请求路由到负责管理定价的应用服务器。借助 7 层负载平衡，网络和应用程序架构师可以创建高度优化的服务器基础架构或应用交付网络，在保障可靠性的同时进行有效扩展。&lt;/p&gt;

&lt;h4 id=&quot;简单总结&quot;&gt;简单总结&lt;/h4&gt;
&lt;p&gt;从上面的对比看来四层负载与七层负载最大的区别就是效率与功能的区别。四层负载架构设计比较简单，无需解析具体的消息内容，在网络吞吐量及处理能力上会相对比较高，而七层负载均衡的优势则体现在功能多，控制灵活强大。在具体业务架构设计时，使用七层负载或者四层负载还得根据具体的情况综合考虑。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;负载均衡时的数据流都经过负载均衡器，如何解决负载均衡器成为瓶颈的问题？&lt;/strong&gt;
通过修改 tcp 报文的源地址和目的地址，使从 web 服务器中返回的数据直接返回到客户端，这是七层负载均衡无法做到的，因为 tcp 三次握手建立在客户端与负载均衡服务器之间，http 协议基于 tcp 协议，建立好 tcp 链接后才传送 http 报文，收到 http 报文说明负载均衡器和客户端已经建立了 tcp 连接，而 web 服务器和客户端的 tcp 链接都没建立，怎么回传数据给客户端呢。以上的办法会出现问题：所有集群里的主机都是内网 ip，无法跟外界联系。&lt;br /&gt;
&lt;strong&gt;解决方案 1：&lt;/strong&gt;&lt;br /&gt;
如果能买到那么多外网 Ip 地址来用，然后在 tcp 链接要建立时负载均衡给真正的 web 服务器，让客户端和服务器建立 tcp 链接&lt;br /&gt;
&lt;strong&gt;解决方案 2：&lt;/strong&gt;&lt;br /&gt;
引用一句话：计算机所有的问题都可以通过建立一层虚拟层解决。&lt;br /&gt;
可以通过将所有服务器主机 ip 虚拟化成负载均衡服务器的 ip，这样服务器集群的所有主机都可以访问外界网络，因为 ip 地址（网络层，三层）都是相同，所以只能通过第二层来分辨数据流向，修改数据链路层（二层）目的主机的 MAC 地址，使请求发到 web 服务器上，然后才真正建立起 tcp 连接，然后 web 服务器因为可以联网，所以可以直接返回数据给客户端&lt;/p&gt;

&lt;h3 id=&quot;从应用场景的需求上分析&quot;&gt;从应用场景的需求上分析&lt;/h3&gt;
&lt;p&gt;七层应用负载的好处，是使得整个网络更 “智能化”。例如访问一个网站的用户流量，可以通过七层的方式，将对图片类的请求转发到特定的图片服务器并可以使用缓存技术；将对文字类的请求可以转发到特定的文字服务器并可以使用压缩技术。当然这只是七层应用的一个小案例，从技术原理上，这种方式可以对客户端的请求和服务器的响应进行任意意义上的修改，极大的提升了应用系统在网络层的灵活性。很多在后台，例如 Nginx 或者 Apache 上部署的功能可以前移到负载均衡设备上，例如客户请求中的 Header 重写，服务器响应中的关键字过滤或者内容插入等功能。&lt;/p&gt;

&lt;p&gt;另外一个常常被提到功能就是安全性。网络中最常见的 SYN Flood 攻击，即黑客控制众多源客户端，使用虚假 IP 地址对同一目标发送 SYN 攻击，通常这种攻击会大量发送 SYN 报文，耗尽服务器上的相关资源，以达到 Denial of Service (DoS) 的目的。从技术原理上也可以看出，四层模式下这些 SYN 攻击都会被转发到后端的服务器上；而七层模式下这些 SYN 攻击自然在负载均衡设备上就截止，不会影响后台服务器的正常运营。另外负载均衡设备可以在七层层面设定多种策略，过滤特定报文，例如 SQL Injection 等应用层面的特定攻击手段，从应用层面进一步提高系统整体安全。&lt;/p&gt;

&lt;p&gt;现在的七层负载均衡，主要还是着重于应用 HTTP 协议，所以其应用范围主要是众多的网站或者内部信息平台等基于 B/S 开发的系统。 4 层负载均衡则对应其他 TCP 应用，例如基于 C/S 开发的 ERP 等系统。&lt;/p&gt;

&lt;h3 id=&quot;七层应用需要考虑的问题&quot;&gt;七层应用需要考虑的问题&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;是否真的必要。&lt;br /&gt;
七层应用的确可以提高流量智能化，同时必不可免的带来设备配置复杂，负载均衡压力增高以及故障排查上的复杂性等问题。在设计系统时需要考虑四层七层同时应用的混杂情况。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;是否真的可以提高安全性。&lt;br /&gt;
例如 SYN Flood 攻击，七层模式的确将这些流量从服务器屏蔽，但负载均衡设备本身要有强大的抗 DDoS 能力，否则即使服务器正常而作为中枢调度的负载均衡设备故障也会导致整个应用的崩溃。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;是否有足够的灵活度。&lt;br /&gt;
七层应用的优势是可以让整个应用的流量智能化，但是负载均衡设备需要提供完善的七层功能，满足客户根据不同情况的基于应用的调度。最简单的一个考核就是能否取代后台 Nginx 或者 Apache 等服务器上的调度功能。能够提供一个七层应用开发接口的负载均衡设备，可以让客户根据需求任意设定功能，才真正有可能提供强大的灵活性和智能性。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;总体对比&quot;&gt;总体对比&lt;/h3&gt;
&lt;h4 id=&quot;智能性&quot;&gt;智能性&lt;/h4&gt;
&lt;p&gt;七层负载均衡由于具备 OIS 七层的所有功能，所以在处理用户需求上能更加灵活，从理论上讲，七层模型能对用户的所有跟服务端的请求进行修改。例如对文件 header 添加信息，根据不同的文件类型进行分类转发。四层模型仅支持基于网络层的需求转发，不能修改用户请求的内容。&lt;/p&gt;

&lt;h4 id=&quot;安全性&quot;&gt;安全性&lt;/h4&gt;
&lt;p&gt;七层负载均衡由于具有 OSI 模型的全部功能，能更容易抵御来自网络的攻击；四层模型从原理上讲，会直接将用户的请求转发给后端节点，无法直接抵御网络攻击。&lt;/p&gt;

&lt;h4 id=&quot;复杂度&quot;&gt;复杂度&lt;/h4&gt;
&lt;p&gt;四层模型一般比较简单的架构，容易管理，容易定位问题；七层模型架构比较复杂，通常也需要考虑结合四层模型的混用情况，出现问题定位比较复杂。&lt;/p&gt;

&lt;h4 id=&quot;效率比&quot;&gt;效率比&lt;/h4&gt;
&lt;p&gt;四层模型基于更底层的设置，通常效率更高，但应用范围有限；七层模型需要更多的资源损耗，在理论上讲比四层模型有更强的功能，现在的实现更多是基于 http 应用。&lt;/p&gt;

&lt;h2 id=&quot;负载均衡技术方案说明&quot;&gt;负载均衡技术方案说明&lt;/h2&gt;
&lt;h3 id=&quot;软--硬件负载均衡&quot;&gt;软 / 硬件负载均衡&lt;/h3&gt;
&lt;p&gt;软件负载均衡解决方案是指在一台或多台服务器相应的操作系统上安装一个或多个附加软件来实现负载均衡，如 DNS Load Balance，CheckPoint Firewall-1 ConnectControl，Keepalive+ipvs 等，它的优点是基于特定环境，配置简单，使用灵活，成本低廉，可以满足一般的负载均衡需求。软件解决方案缺点也较多，因为每台服务器上安装额外的软件运行会消耗系统不定量的资源，越是功能强大的模块，消耗得越多，所以当连接请求特别大的时候，软件本身会成为服务器工作成败的一个关键；软件可扩展性并不是很好，受到操作系统的限制；由于操作系统本身的 Bug，往往会引起安全问题。&lt;/p&gt;

&lt;p&gt;硬件负载均衡解决方案是直接在服务器和外部网络间安装负载均衡设备，这种设备通常是一个独立于系统的硬件，我们称之为负载均衡器。由于专门的设备完成专门的任务，独立于操作系统，整体性能得到大量提高，加上多样化的负载均衡策略，智能化的流量管理，可达到最佳的负载均衡需求。负载均衡器有多种多样的形式，除了作为独立意义上的负载均衡器外，有些负载均衡器集成在交换设备中，置于服务器与 Internet 链接之间，有些则以两块网络适配器将这一功能集成到 PC 中，一块连接到 Internet 上，一块连接到后端服务器群的内部网络上。&lt;/p&gt;

&lt;p&gt;软件负载均衡与硬件负载均衡的对比：
软件负载均衡的优点是需求环境明确，配置简单，操作灵活，成本低廉，效率不高，能满足普通的企业需求；缺点是依赖于系统，增加资源开销；软件的优劣决定环境的性能；系统的安全，软件的稳定性均会影响到整个环境的安全。
硬件负载均衡优点是独立于系统，整体性能大量提升，在功能、性能上优于软件方式；智能的流量管理，多种策略可选，能达到最佳的负载均衡效果；缺点是价格昂贵。&lt;/p&gt;

&lt;h3 id=&quot;本地--全局负载均衡&quot;&gt;本地 / 全局负载均衡&lt;/h3&gt;
&lt;p&gt;负载均衡从其应用的地理结构上分为本地负载均衡 (Local Load Balance) 和全局负载均衡 (Global Load Balance，也叫地域负载均衡)，本地负载均衡是指对本地的服务器群做负载均衡，全局负载均衡是指对分别放置在不同的地理位置、有不同网络结构的服务器群间作负载均衡。&lt;/p&gt;

&lt;p&gt;本地负载均衡能有效地解决数据流量过大、网络负荷过重的问题，并且不需花费昂贵开支购置性能卓越的服务器，充分利用现有设备，避免服务器单点故障造成数据流量的损失。其有灵活多样的均衡策略把数据流量合理地分配给服务器群内的服务器共同负担。即使是再给现有服务器扩充升级，也只是简单地增加一个新的服务器到服务群中，而不需改变现有网络结构、停止现有的服务。&lt;/p&gt;

&lt;p&gt;全局负载均衡主要用于在一个多区域拥有自己服务器的站点，为了使全球用户只以一个 IP 地址或域名就能访问到离自己最近的服务器，从而获得最快的访问速度，也可用于子公司分散站点分布广的大公司通过 Intranet（企业内部互联网）来达到资源统一合理分配的目的。&lt;/p&gt;

&lt;h3 id=&quot;网络层次上的负载均衡&quot;&gt;网络层次上的负载均衡&lt;/h3&gt;
&lt;p&gt;针对网络上负载过重的不同瓶颈所在，从网络的不同层次入手，我们可以采用相应的负载均衡技术来解决现有问题。&lt;/p&gt;

&lt;p&gt;随着带宽增加，数据流量不断增大，网络核心部分的数据接口将面临瓶颈问题，原有的单一线路将很难满足需求，而且线路的升级又过于昂贵甚至难以实现，这时就可以考虑采用链路聚合（Trunking）技术。&lt;/p&gt;

&lt;p&gt;链路聚合技术（第二层负载均衡）将多条物理链路当作一条单一的聚合逻辑链路使用，网络数据流量由聚合逻辑链路中所有物理链路共同承担，由此在逻辑上增大了链路的容量，使其能满足带宽增加的需求。&lt;/p&gt;

&lt;p&gt;现代负载均衡技术通常操作于网络的第四层或第七层。第四层负载均衡将一个 Internet 上合法注册的 IP 地址映射为多个内部服务器的 IP 地址，对每次 TCP 连接请求动态使用其中一个内部 IP 地址，达到负载均衡的目的。在第四层交换机中，此种均衡技术得到广泛的应用，一个目标地址是服务器群 VIP（虚拟 IP，Virtual IP address）连接请求的数据包流经交换机，交换机根据源端和目的 IP 地址、TCP 或 UDP 端口号和一定的负载均衡策略，在服务器 IP 和 VIP 间进行映射，选取服务器群中最好的服务器来处理连接请求。&lt;/p&gt;

&lt;p&gt;七层负载均衡控制应用层服务的内容，提供了一种对访问流量的高层控制方式，适合对 HTTP 服务器群的应用。第七层负载均衡技术通过检查流经的 HTTP 报头，根据报头内的信息来执行负载均衡任务。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;七层负载均衡优点表现在如下几个方面：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;通过对 HTTP 报头的检查，可以检测出 HTTP400、500 和 600 系列的错误信息，因而能透明地将连接请求重新定向到另一台服务器，避免应用层故障。&lt;/li&gt;
  &lt;li&gt;可根据流经的数据类型（如判断数据包是图像文件、压缩文件或多媒体文件格式等），把数据流量引向相应内容的服务器来处理，增加系统性能。&lt;/li&gt;
  &lt;li&gt;能根据连接请求的类型，如是普通文本、图象等静态文档请求，还是 asp、cgi 等的动态文档请求，把相应的请求引向相应的服务器来处理，提高系统的性能及安全性。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;七层负载均衡缺点表现在如下几个方面：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;七层负载均衡受到其所支持的协议限制（一般只有 HTTP），这样就限制了它应用的广泛性。&lt;/li&gt;
  &lt;li&gt;七层负载均衡检查 HTTP 报头会占用大量的系统资源，势必会影响到系统的性能，在大量连接请求的情况下，负载均衡设备自身容易成为网络整体性能的瓶颈。&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;负载均衡策略&quot;&gt;负载均衡策略&lt;/h2&gt;
&lt;p&gt;在实际应用中，我们可能不想仅仅是把客户端的服务请求平均地分配给内部服务器，而不管服务器是否宕机。而是想使 Pentium III 服务器比 Pentium II 能接受更多的服务请求，一台处理服务请求较少的服务器能分配到更多的服务请求，出现故障的服务器将不再接受服务请求直至故障恢复等等。选择合适的负载均衡策略，使多个设备能很好的共同完成任务，消除或避免现有网络负载分布不均、数据流量拥挤反应时间长的瓶颈。在各负载均衡方式中，针对不同的应用需求，在 OSI 参考模型的第二、三、四、七层的负载均衡都有相应的负载均衡策略。&lt;/p&gt;

&lt;p&gt;负载均衡策略的优劣及其实现的难易程度有两个关键因素：负载均衡算法；对网络系统状况的检测方式和能力。
负载均衡算法&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;轮循均衡（Round Robin）&lt;br /&gt;
每一次来自网络的请求轮流分配给内部中的服务器，从 1 至 N 然后重新开始。此种均衡算法适合于服务器组中的所有服务器都有相同的软硬件配置并且平均服务请求相对均衡的情况。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;权重轮循均衡（Weighted Round Robin）&lt;br /&gt;
根据服务器的不同处理能力，给每个服务器分配不同的权值，使其能够接受相应权值数的服务请求。例如：服务器 A 的权值被设计成 1，B 的权值是 3，C 的权值是 6，则服务器 A、B、C 将分别接受到 10%、30％、60％的服务请求。此种均衡算法能确保高性能的服务器得到更多的使用率，避免低性能的服务器负载过重。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;随机均衡（Random）&lt;br /&gt;
把来自网络的请求随机分配给内部中的多个服务器。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;权重随机均衡（Weighted Random）&lt;br /&gt;
此种均衡算法类似于权重轮循算法，不过在处理请求分担时是个随机选择的过程。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;响应速度均衡（Response Time）&lt;br /&gt;
负载均衡设备对内部各服务器发出一个探测请求（例如 Ping），然后根据内部中各服务器对探测请求的最快响应时间来决定哪一台服务器来响应客户端的服务请求。此种均衡算法能较好的反映服务器的当前运行状态，但这最快响应时间仅仅指的是负载均衡设备与服务器间的最快响应时间，而不是客户端与服务器间的最快响应时间。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;最少连接数均衡（Least Connection）&lt;br /&gt;
客户端的每一次请求服务在服务器停留的时间可能会有较大的差异，随着工作时间加长，如果采用简单的轮循或随机均衡算法，每一台服务器上的连接进程可能会产生极大的不同，并没有达到真正的负载均衡。最少连接数均衡算法对内部中需负载的每一台服务器都有一个数据记录，记录当前该服务器正在处理的连接数量，当有新的服务连接请求时，将把当前请求分配给连接数最少的服务器，使均衡更加符合实际情况，负载更加均衡。此种均衡算法适合长时处理的请求服务，如 FTP。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;处理能力均衡&lt;br /&gt;
此种均衡算法将把服务请求分配给内部中处理负荷（根据服务器 CPU 型号、CPU 数量、内存大小及当前连接数等换算而成）最轻的服务器，由于考虑到了内部服务器的处理能力及当前网络运行状况，所以此种均衡算法相对来说更加精确，尤其适合运用到第七层（应用层）负载均衡的情况下。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;DNS 响应均衡（Flash DNS）&lt;br /&gt;
在 Internet 上，无论是 HTTP、FTP 或是其它的服务请求，客户端一般都是通过域名解析来找到服务器确切的 IP 地址的。在此均衡算法下，分处在不同地理位置的负载均衡设备收到同一个客户端的域名解析请求，并在同一时间内把此域名解析成各自相对应服务器的 IP 地址（即与此负载均衡设备在同一位地理位置的服务器的 IP 地址）并返回给客户端，则客户端将以最先收到的域名解析 IP 地址来继续请求服务，而忽略其它的 IP 地址响应。在种均衡策略适合应用在全局负载均衡的情况下，对本地负载均衡是没有意义的。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content><author><name>Lewin</name></author><category term="lvs" /><category term="负载均衡" /><summary type="html">什么是负载均衡 负载均衡（Load Balance）建立在现有网络结构之上，它提供了一种廉价有效透明的方法扩展网络设备和服务器的带宽、增加吞吐量、加强网络数据处理能力、提高网络的灵活性和可用性。负载均衡有两方面的含义：首先，大量的并发访问或数据流量分担到多台节点设备上分别处理，减少用户等待响应的时间；其次，单个重负载的运算分担到多台节点设备上做并行处理，每个节点设备处理结束后，将结果汇总，返回给用户，系统处理能力得到大幅度提高。</summary></entry><entry><title type="html">golang 中 Json 转换注意点</title><link href="https://lewinz.org/2021/07/01/golang-json/" rel="alternate" type="text/html" title="golang 中 Json 转换注意点" /><published>2021-07-01T00:00:00+08:00</published><updated>2021-07-01T00:00:00+08:00</updated><id>https://lewinz.org/2021/07/01/golang-json</id><content type="html" xml:base="https://lewinz.org/2021/07/01/golang-json/">&lt;p&gt;在使用 go 语言开发过程中，经常需要使用到 json 包来进行 json 和 struct 的互相转换，在使用过程中，遇到了一些需要额外注意的地方，记录如下。&lt;/p&gt;

&lt;h2 id=&quot;整数变浮点数问题&quot;&gt;整数变浮点数问题&lt;/h2&gt;
&lt;p&gt;假设有一个 Person 结构，其中包含 Age int64 和 Weight float64 两个字段，现在通过 json 包将 Person 结构转为 map [string] interface {}，代码如下。&lt;/p&gt;
&lt;div class=&quot;language-golang highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;Age&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int64&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;Weight&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;float64&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 
&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;person&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Wang Wu&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Weight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;150.07&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 
 &lt;span class=&quot;n&quot;&gt;jsonBytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Marshal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jsonBytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
 
 &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;personFromJSON&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;interface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Unmarshal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jsonBytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;personFromJSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 
 &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;personFromJSON&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;interface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{})&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;代码执行到这里看上去一切正常，但是打印一下 map [string] interface {} 就会发现不太对了。&lt;/p&gt;
&lt;div class=&quot;language-golang highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reflect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TypeOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Age&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;// float64&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reflect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TypeOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Weight&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;// float64&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;转换成 map [string] interface {} 之后，原先的 uint64 和 float64 类型都被转换成了 float64 类型，这显然是不符合我们的预期的。
&lt;img src=&quot;https://cdn.jsdelivr.net/gh/Lewinz/lewinz.github.io@master/images/posts/golang_json_1.png&quot; alt=&quot;golang-json-convert&quot; /&gt;&lt;/p&gt;

&lt;p&gt;查看 json 的规范可以看到，在 json 中是没有整型和浮点型之分的，所以现在可以理解 json 包中的 Unmarshal 方法转出的数字类型为什么都是 float64 了，因为根据 json 规范，数字都是同一种类型，那么对应到 go 的类型中最接近的就是 float64 了。&lt;/p&gt;

&lt;p&gt;json 包还针对这个问题提供了更好的解决方案，不过需要使用 json.Decoder 来代替 json.Unmarshal 方法，将 json.Unmarhsal 替换如下。&lt;/p&gt;
&lt;div class=&quot;language-golang highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;personFromJSON&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;interface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
 
&lt;span class=&quot;n&quot;&gt;decoder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NewDecoder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bytes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NewReader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jsonBytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;decoder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UseNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;decoder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;personFromJSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 
&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;personFromJSON&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;interface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;这种方法首先创建了一个 jsonDecoder，然后调用了 UseNumber 方法，从文档中可以知道，使用 UseNumber 方法后，json 包会将数字转换成一个内置的 Number 类型（而不是 float64），这个 Number 类型提供了转换为 int64、float64 等多个方法。
&lt;img src=&quot;https://cdn.jsdelivr.net/gh/Lewinz/lewinz.github.io@master/images/posts/golang_json_2.png&quot; alt=&quot;golang-json-convert&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;时间格式&quot;&gt;时间格式&lt;/h2&gt;

&lt;p&gt;对于 json 格式，是没有时间类型的，日期和时间以 json 格式存储时，需要转换为字符串类型。这就带来了一个问题，日期时间的字符串表示有多种多样，go 的 json 包支持的是哪一种呢？&lt;/p&gt;

&lt;p&gt;使用下面的代码来输出 json.Marshal 方法将 Time 类型转换为字符串后的格式。&lt;/p&gt;
&lt;div class=&quot;language-golang highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;Birth&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Time&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 
&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;person&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Wang Wu&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Birth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 
 &lt;span class=&quot;n&quot;&gt;jsonBytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Marshal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jsonBytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;// {&quot;Name&quot;:&quot;Wang Wu&quot;,&quot;Birth&quot;:&quot;2018-12-20T16:22:02.00287617+08:00&quot;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;根据输出可以判断，go 的 json 包使用的是 RFC3339 标准中定义的格式。接下来测试一下 json.Unmarshal 方法所支持的日期时间格式。&lt;/p&gt;
&lt;div class=&quot;language-golang highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;dateStr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;2018-10-12&quot;&lt;/span&gt;
 
&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;person&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;jsonStr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Sprintf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Wang Wu&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Birth&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;: &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dateStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Unmarshal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([]&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jsonStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 
&lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Birth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;// 0001-01-01 00:00:00 +0000 UTC&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;对于形如 2018-10-12 的字符串，json 包并没有成功将其解析，接下来我们把 time 包中支持的所有格式都试一下。
&lt;img src=&quot;https://cdn.jsdelivr.net/gh/Lewinz/lewinz.github.io@master/images/posts/golang_json_3.png&quot; alt=&quot;golang-json-convert&quot; /&gt;&lt;/p&gt;

&lt;p&gt;经过试验，发现 json.Unmarshal 方法只支持 RFC3339 和 RFC3339Nano 两种格式的转换。还有一个需要注意的地方，使用 time.Now () 生成的时间是带有一个 Monotonic Time 的，经过 json.Marshal 转换时候，由于 RFC3339 规范里没有存放 Monotonic Time 的位置，会丢掉这一部分。&lt;/p&gt;

&lt;h2 id=&quot;对于字段为空的处理&quot;&gt;对于字段为空的处理&lt;/h2&gt;
&lt;p&gt;json 包对于空值的处理是一个非常容易出错的地方，看下面代码。&lt;/p&gt;
&lt;div class=&quot;language-golang highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt;  &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;Age&lt;/span&gt;  &lt;span class=&quot;kt&quot;&gt;int64&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;Birth&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Time&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;Children&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 
&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;person&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
 
 &lt;span class=&quot;n&quot;&gt;jsonBytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Marshal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jsonBytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;// {&quot;Name&quot;:&quot;&quot;,&quot;Age&quot;:0,&quot;Birth&quot;:&quot;0001-01-01T00:00:00Z&quot;,&quot;Children&quot;:null}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;当 struct 中的字段没有值时，使用 json.Marshal 方法并不会自动忽略这些字段，而是根据字段的类型输出了他们的默认空值，这往往和我们的预期不一致，json 包提供了对字段的控制手段，我们可以为字段增加 omitempty tag，这个 tag 会在字段值为零值（int 和 float 类型零值是 0，string 类型零值是 ““，对象类型零值是 nil）时，忽略该字段。&lt;/p&gt;
&lt;div class=&quot;language-golang highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PersonAllowEmpty&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt;  &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;    &lt;span class=&quot;s&quot;&gt;`json:&quot;,omitempty&quot;`&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;Age&lt;/span&gt;  &lt;span class=&quot;kt&quot;&gt;int64&lt;/span&gt;    &lt;span class=&quot;s&quot;&gt;`json:&quot;,omitempty&quot;`&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;Birth&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Time&lt;/span&gt;   &lt;span class=&quot;s&quot;&gt;`json:&quot;,omitempty&quot;`&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;Children&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PersonAllowEmpty&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;`json:&quot;,omitempty&quot;`&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 
&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;person&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PersonAllowEmpty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;jsonBytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Marshal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jsonBytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;// {&quot;Birth&quot;:&quot;0001-01-01T00:00:00Z&quot;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;可以看到，这次输出的 json 中只有 Birth 字段了，string、int、对象类型的字段，都因为没有赋值，默认是零值，所以被忽略，对于日期时间类型，由于不可以设置为零值，也就是 0000-00-00 00:00:00，不会被忽略。&lt;/p&gt;

&lt;p&gt;需要注意这样的情况：如果一个人的年龄是 0 （对于刚出生的婴儿，这个值是合理的），刚好是 int 字段的零值，在添加 omitempty tag 的情况下，年龄字段会被忽略。&lt;/p&gt;

&lt;p&gt;如果想要某一个字段在任何情况下都被 json 包忽略，需要使用如下的写法。&lt;/p&gt;
&lt;div class=&quot;language-golang highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt;  &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;`json:&quot;-&quot;`&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;Age&lt;/span&gt;  &lt;span class=&quot;kt&quot;&gt;int64&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;`json:&quot;-&quot;`&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;Birth&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Time&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;`json:&quot;-&quot;`&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;Children&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;`json:&quot;-&quot;`&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 
&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;birth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RFC3339&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;1988-12-02T15:04:27+08:00&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;person&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Wang Wu&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Birth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;birth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Children&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 
 &lt;span class=&quot;n&quot;&gt;jsonBytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Marshal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jsonBytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;// {}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;可以看到，使用 json:”-“ 标签的字段都被忽略了。&lt;/p&gt;

&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.jb51.net/article/153337.htm&quot;&gt;博客&lt;/a&gt;&lt;br /&gt;
ps:主要是 float 问题&lt;/p&gt;</content><author><name>Lewin</name></author><category term="golang" /><category term="json" /><summary type="html">在使用 go 语言开发过程中，经常需要使用到 json 包来进行 json 和 struct 的互相转换，在使用过程中，遇到了一些需要额外注意的地方，记录如下。</summary></entry><entry><title type="html">golang 字符串中的潜在风险</title><link href="https://lewinz.org/2021/07/01/golang-string-risk/" rel="alternate" type="text/html" title="golang 字符串中的潜在风险" /><published>2021-07-01T00:00:00+08:00</published><updated>2021-07-01T00:00:00+08:00</updated><id>https://lewinz.org/2021/07/01/golang-string-risk</id><content type="html" xml:base="https://lewinz.org/2021/07/01/golang-string-risk/">&lt;p&gt;&lt;strong&gt;出处&lt;/strong&gt;： &lt;a href=&quot;https://mp.weixin.qq.com/s/_ScaGaB8mr2aSyQjL-VIaA&quot;&gt;Go语言中文网 微信公众号发布文章&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;在我之前的文章 Go 中我喜欢的东西中提到过，我喜欢的 Go的东西其中之一就是它的字符串（通常还有切片）。&lt;/p&gt;

&lt;p&gt;从一个 Python 开发者的角度看，它们之所以伟大，是因为创建它们时开销很少，因为它们通常不需要复制。在 Python 中，任何时候操作字符串都需要复制一部分或全部字符串，而 这很容易对性能造成影响。想要写高性能的 Python 代码需要谨慎考虑复制的问题。在 Go 中，几乎所有的字符串操作都是不复制的，仅仅是从原字符串取一个子集（例如去除字符串首尾的空白字符），因此你可以更自由地操作字符串。这个机制可以非常直接地解决你的问题，并且非常高效。（当然，不是所有的字符串操作都不复制。例如，把一个字符串转换成大写需要复制，尽管 Go 中的实现已经足够智能，在不需要改变原字符串时 — 例如由于它已经是一个全大写的字符串 — 可以规避掉复制。）&lt;/p&gt;

&lt;p&gt;但是这个优势也带来了潜在的坏处，那些没有开销的子字符串使原来的整个字符串一直存在于内存中。Go 中的字符串（和切片）操作之所以内存开销很少，是因为它们只是底层存储（字符串或切片底层的数组的真实数据）的一些部分的引用；创建一个字符串做的操作就是创建了一个新的引用。&lt;/p&gt;

&lt;p&gt;但是 Go（目前）不会对字符串数据或数组进行部分的垃圾回收，所以即使它一个很小的 bit 被其它元素引用，整个对象也会一直保持在内存中。换句话说，一个单字符的字符串（目前）足够让一个巨大的字符串不被 GC 回收。&lt;/p&gt;

&lt;p&gt;当然，不会有很多人遇到这个问题。为了遇到它，你需要处理一个非常庞大的原字符串，或造成大量的内存消耗（或者两者都做），在这个基础上，你必须创建那些不持久的字符串的持久的小子字符串（好吧，你是多么希望它是非持久的）。很多使用场景不会复现这个问题；要么你的原字符串不够大，要么你的子集获取了大部分原字符串（例如你把原字符串进行了分词处理），要么子字符串生命周期不够长。简而言之，如果你是一个普通的 Go 开发者，你可以忽略这个问题。处理长字符串并且长时间维持原字符串的很小部分的人才会关注这个问题。&lt;/p&gt;

&lt;p&gt;（我之所以关注到这个问题，是因为一次我花了大量精力用尽可能少的内存写 Python 程序，尽管它是从一个大的配置文件解析结果然后分块储存。这让我联想到了一些其他的事，如字符串的生命周期、限制字符串只复制一次，等等。然后我用 Go 语言写了一个解析器，这让我由重新考虑了一下这些问题，我意识到由于我的解析器截取出和维持的 bit 一直存在于内存中，从输入文件解析出的庞大字符串也会一直存在与内存中。）&lt;/p&gt;

&lt;p&gt;顺便说一下，我认为这是 Go 做了权衡之后的正确结果。大部分使用字符串的开发者不会遇到这个问题，而且截取子字符串开销很小对于开发者来说用处很大。这种低开销的截取操作也减轻了 GC 的负担；当代码使用大量的子字符串截取（像 Python 中那样）时，你只需要处理固定长度的字符串引用就可以了，而不是需要处理长度变化的字符串。&lt;/p&gt;

&lt;p&gt;当你的代码遇到这个问题时，当然有明显的解决方法：创建一个函数，通过把字符串转换成 []byte 来 ”最小化“ 字符串，然后返回。这种方法生成了一个最小化的字符串，内存开销是理论上最完美实现的只复制一次，而 Go 现在很容易就可以实现。&lt;/p&gt;</content><author><name>Lewin</name></author><category term="golang" /><category term="字符串" /><summary type="html">出处： Go语言中文网 微信公众号发布文章</summary></entry><entry><title type="html">openstack loadbalancer 命令行</title><link href="https://lewinz.org/2021/07/01/openstack-loadbalancer-cli/" rel="alternate" type="text/html" title="openstack loadbalancer 命令行" /><published>2021-07-01T00:00:00+08:00</published><updated>2021-07-01T00:00:00+08:00</updated><id>https://lewinz.org/2021/07/01/openstack-loadbalancer-cli</id><content type="html" xml:base="https://lewinz.org/2021/07/01/openstack-loadbalancer-cli/">&lt;h2 id=&quot;鉴权文件格式&quot;&gt;鉴权文件格式&lt;/h2&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;OS_USERNAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;admin
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;OS_PASSWORD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;adminPassword
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;OS_TENANT_NAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;admin
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;OS_AUTH_URL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;https://xxxxxxxx:port/v3
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;OS_USER_DOMAIN_NAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Default
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;OS_PROJECT_DOMAIN_NAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Default
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;OS_IDENTITY_API_VERSION&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;3
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;OS_PROJECT_ID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;xxxxxxxxxxxxxxxxx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;cli&quot;&gt;CLI&lt;/h2&gt;
&lt;h3 id=&quot;查询环境中有的子网和安全组&quot;&gt;查询环境中有的子网和安全组&lt;/h3&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;lookback@LookdeMacBook-Pro ~/OpenStack]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;openstack network list
+--------------------------------------+------------+--------------------------------------+
| ID                                   | Name       | Subnets                              |
+--------------------------------------+------------+--------------------------------------+
| 0d3f4ed0-6eaf-4526-989d-6666898e3721 | lbaas-mgmt | 8f2ead4f-ff07-422f-815e-ff4dd8ede705 |
| 24333c1d-001b-4898-9c30-994a20b57cb1 | NET-A      | ec936eaa-ca78-45fb-9b02-561681a966dd |
| 58ba4366-ecc5-46f6-8898-8b8e743797d6 | NET-B      | e0531da2-b031-4e0a-9303-33f10d9c3aec |
| 67ca0cc2-68f9-4aee-b059-4666e2721dfa | NET-C      | 3fb199b8-8375-41b5-aebe-e6684bb0fe57 |
+--------------------------------------+------------+--------------------------------------+
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;lookback@LookdeMacBook-Pro ~/OpenStack]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;openstack security group list 
+--------------------------------------+-----------------------------------------+------------------------------------+----------------------------------+------+
| ID                                   | Name                                    | Description                        | Project                          | Tags |
+--------------------------------------+-----------------------------------------+------------------------------------+----------------------------------+------+
| 1327a82f-6974-45d0-9361-6029b2b7f1fe | lb-26a6049b-f5d0-4ac4-b64f-b3e6671ae6e0 |                                    | fe1eada6191c45bca8cf2eb1b1a1eb47 | &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt;   |
| 52f0eed5-f398-427c-a4f6-2c6d7c8b88e4 | default                                 | Default security group             | 8561e762e5ce4b79ab5757f9e393a44b | &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt;   |
| a657ba7b-f2ff-4e10-b986-fe84243a0a16 | RAX-TEST                                | RAX-TEST                           | 5df4e0c1c68647ef800e7904d455b58d | &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt;   |
| ac3f43c5-fe9d-49bb-befd-c42b2f100150 | octavia_sec_grp                         | security group &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;octavia amphora | fe1eada6191c45bca8cf2eb1b1a1eb47 | &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt;   |
| d9386462-0eae-43c1-b815-f999fa3cd833 | 放行进出公网                            | 对30段网络的公网进出全放行         | 5df4e0c1c68647ef800e7904d455b58d | &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt;   |
| ee287eef-0ad2-4d78-97dd-1fef7544879e | default                                 | Default security group             | fe1eada6191c45bca8cf2eb1b1a1eb47 | &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt;   |
| f0e116a5-35a4-47c6-baeb-06aa15cfdfed | rax-test-20200310                       | rax-test-20200310                  | 5df4e0c1c68647ef800e7904d455b58d | &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt;   |
| f0e28f3a-167a-4134-93d7-0ef001c72f6d | default                                 | Default security group             | 5df4e0c1c68647ef800e7904d455b58d | &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt;   |
+--------------------------------------+-----------------------------------------+------------------------------------+----------------------------------+------+
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;lookback@LookdeMacBook-Pro ~/OpenStack]&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;创建一个在子网-net-b-上负载均衡-ip-17225255202-名字为-test2&quot;&gt;创建一个在子网 NET-B 上负载均衡 IP 172.25.255.202 名字为 test2&lt;/h3&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;lookback@LookdeMacBook-Pro ~/OpenStack]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;openstack loadbalancer create &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; test2 &lt;span class=&quot;nt&quot;&gt;--vip-subnet-id&lt;/span&gt; e0531da2-b031-4e0a-9303-33f10d9c3aec &lt;span class=&quot;nt&quot;&gt;--vip-address&lt;/span&gt; 172.25.255.202
+---------------------+--------------------------------------+
| Field               | Value                                |
+---------------------+--------------------------------------+
| admin_state_up      | True                                 |
| availability_zone   |                                      |
| created_at          | 2020-03-22T16:46:45                  |
| description         |                                      |
| flavor_id           | None                                 |
| &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;                  | 26a6049b-f5d0-4ac4-b64f-b3e6671ae6e0 |
| listeners           |                                      |
| name                | test2                                |
| operating_status    | OFFLINE                              |
| pools               |                                      |
| project_id          | 5df4e0c1c68647ef800e7904d455b58d     |
| provider            | amphora                              |
| provisioning_status | PENDING_CREATE                       |
| updated_at          | None                                 |
| vip_address         | 172.25.255.202                       |
| vip_network_id      | 58ba4366-ecc5-46f6-8898-8b8e743797d6 |
| vip_port_id         | abe786ea-7c9a-4937-816d-edd996dde5a5 |
| vip_qos_policy_id   | None                                 |
| vip_subnet_id       | e0531da2-b031-4e0a-9303-33f10d9c3aec |
+---------------------+--------------------------------------+
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;lookback@LookdeMacBook-Pro ~/OpenStack]&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;给-vip-port-的安全组添加-icmpk-可以-ping-的规则&quot;&gt;给 vip port 的安全组添加 icmpk 可以 ping 的规则&lt;/h3&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;openstack loadbalancer list
&lt;span class=&quot;nv&quot;&gt;loadbalancer_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;26a6049b-f5d0-4ac4-b64f-b3e6671ae6e0
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;lookback@LookdeMacBook-Pro ~/OpenStack]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;openstack security group rule create &lt;span class=&quot;nt&quot;&gt;--protocol&lt;/span&gt; icmp &lt;span class=&quot;nt&quot;&gt;--remote-ip&lt;/span&gt; 0.0.0.0/0 &lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;openstack port show &lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;openstack loadbalancer show &lt;span class=&quot;nv&quot;&gt;$loadbalancer_id&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'$2==&quot;vip_port_id&quot;{print $4}'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'$2==&quot;security_group_ids&quot;{print $4}'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;
+-------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Field             | Value                                                                                                                                                            |
+-------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| created_at        | 2020-03-23T08:45:58Z                                                                                                                                             |
| description       |                                                                                                                                                                  |
| direction         | ingress                                                                                                                                                          |
| ether_type        | IPv4                                                                                                                                                             |
| &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;                | 3bdb7e7c-dc72-46e9-b9d2-0481bbad42a4                                                                                                                             |
| location          | &lt;span class=&quot;nv&quot;&gt;cloud&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;, project.domain_id&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'default'&lt;/span&gt;, project.domain_name&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;, project.id&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'5df4e0c1c68647ef800e7904d455b58d'&lt;/span&gt;, project.name&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'admin'&lt;/span&gt;, &lt;span class=&quot;nv&quot;&gt;region_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'RegionOne'&lt;/span&gt;, &lt;span class=&quot;nv&quot;&gt;zone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; |
| name              | None                                                                                                                                                             |
| port_range_max    | None                                                                                                                                                             |
| port_range_min    | None                                                                                                                                                             |
| project_id        | 5df4e0c1c68647ef800e7904d455b58d                                                                                                                                 |
| protocol          | icmp                                                                                                                                                             |
| remote_group_id   | None                                                                                                                                                             |
| remote_ip_prefix  | 0.0.0.0/0                                                                                                                                                        |
| revision_number   | 0                                                                                                                                                                |
| security_group_id | d9386462-0eae-43c1-b815-f999fa3cd833                                                                                                                             |
| tags              | &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt;                                                                                                                                                               |
| updated_at        | 2020-03-23T08:45:58Z                                                                                                                                             |
+-------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;lookback@LookdeMacBook-Pro ~/OpenStack]&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;给-vip-添加安全组&quot;&gt;给 vip 添加安全组&lt;/h3&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;lookback@LookdeMacBook-Pro ~/OpenStack]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;openstack port &lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--security-group&lt;/span&gt; d9386462-0eae-43c1-b815-f999fa3cd833 abe786ea-7c9a-4937-816d-edd996dde5a5
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;lookback@LookdeMacBook-Pro ~/OpenStack]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;lookback@LookdeMacBook-Pro ~/OpenStack]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;lookback@LookdeMacBook-Pro ~/OpenStack]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;openstack port show abe786ea-7c9a-4937-816d-edd996dde5a5
+-------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Field                   | Value                                                                                                                                                            |
+-------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| admin_state_up          | DOWN                                                                                                                                                             |
| allowed_address_pairs   |                                                                                                                                                                  |
| binding_host_id         |                                                                                                                                                                  |
| binding_profile         |                                                                                                                                                                  |
| binding_vif_details     |                                                                                                                                                                  |
| binding_vif_type        | unbound                                                                                                                                                          |
| binding_vnic_type       | normal                                                                                                                                                           |
| created_at              | 2020-03-22T16:46:45Z                                                                                                                                             |
| data_plane_status       | None                                                                                                                                                             |
| description             |                                                                                                                                                                  |
| device_id               | lb-26a6049b-f5d0-4ac4-b64f-b3e6671ae6e0                                                                                                                          |
| device_owner            | Octavia                                                                                                                                                          |
| dns_assignment          | &lt;span class=&quot;nv&quot;&gt;fqdn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'host-172-25-255-202.openstack.local.'&lt;/span&gt;, &lt;span class=&quot;nb&quot;&gt;hostname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'host-172-25-255-202'&lt;/span&gt;, &lt;span class=&quot;nv&quot;&gt;ip_address&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'172.25.255.202'&lt;/span&gt;                                                         |
| dns_domain              |                                                                                                                                                                  |
| dns_name                |                                                                                                                                                                  |
| extra_dhcp_opts         |                                                                                                                                                                  |
| fixed_ips               | &lt;span class=&quot;nv&quot;&gt;ip_address&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'172.25.255.202'&lt;/span&gt;, &lt;span class=&quot;nv&quot;&gt;subnet_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'e0531da2-b031-4e0a-9303-33f10d9c3aec'&lt;/span&gt;                                                                                    |
| &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;                      | abe786ea-7c9a-4937-816d-edd996dde5a5                                                                                                                             |
| location                | &lt;span class=&quot;nv&quot;&gt;cloud&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;, project.domain_id&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'default'&lt;/span&gt;, project.domain_name&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;, project.id&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'5df4e0c1c68647ef800e7904d455b58d'&lt;/span&gt;, project.name&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'admin'&lt;/span&gt;, &lt;span class=&quot;nv&quot;&gt;region_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'RegionOne'&lt;/span&gt;, &lt;span class=&quot;nv&quot;&gt;zone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; |
| mac_address             | fa:16:3e:e2:f5:62                                                                                                                                                |
| name                    | octavia-lb-26a6049b-f5d0-4ac4-b64f-b3e6671ae6e0                                                                                                                  |
| network_id              | 58ba4366-ecc5-46f6-8898-8b8e743797d6                                                                                                                             |
| port_security_enabled   | True                                                                                                                                                             |
| project_id              | 5df4e0c1c68647ef800e7904d455b58d                                                                                                                                 |
| propagate_uplink_status | None                                                                                                                                                             |
| qos_policy_id           | None                                                                                                                                                             |
| resource_request        | None                                                                                                                                                             |
| revision_number         | 3                                                                                                                                                                |
| security_group_ids      | 1327a82f-6974-45d0-9361-6029b2b7f1fe, d9386462-0eae-43c1-b815-f999fa3cd833                                                                                       |
| status                  | DOWN                                                                                                                                                             |
| tags                    |                                                                                                                                                                  |
| trunk_details           | None                                                                                                                                                             |
| updated_at              | 2020-03-22T17:10:56Z                                                                                                                                             |
+-------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;lookback@LookdeMacBook-Pro ~/OpenStack]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;lookback@LookdeMacBook-Pro ~/OpenStack]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;openstack port &lt;span class=&quot;nb&quot;&gt;unset&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--security-group&lt;/span&gt; 1327a82f-6974-45d0-9361-6029b2b7f1fe abe786ea-7c9a-4937-816d-edd996dde5a5
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;lookback@LookdeMacBook-Pro ~/OpenStack]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;openstack port show abe786ea-7c9a-4937-816d-edd996dde5a5                                                       
+-------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Field                   | Value                                                                                                                                                            |
+-------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| admin_state_up          | DOWN                                                                                                                                                             |
| allowed_address_pairs   |                                                                                                                                                                  |
| binding_host_id         |                                                                                                                                                                  |
| binding_profile         |                                                                                                                                                                  |
| binding_vif_details     |                                                                                                                                                                  |
| binding_vif_type        | unbound                                                                                                                                                          |
| binding_vnic_type       | normal                                                                                                                                                           |
| created_at              | 2020-03-22T16:46:45Z                                                                                                                                             |
| data_plane_status       | None                                                                                                                                                             |
| description             |                                                                                                                                                                  |
| device_id               | lb-26a6049b-f5d0-4ac4-b64f-b3e6671ae6e0                                                                                                                          |
| device_owner            | Octavia                                                                                                                                                          |
| dns_assignment          | &lt;span class=&quot;nv&quot;&gt;fqdn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'host-172-25-255-202.openstack.local.'&lt;/span&gt;, &lt;span class=&quot;nb&quot;&gt;hostname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'host-172-25-255-202'&lt;/span&gt;, &lt;span class=&quot;nv&quot;&gt;ip_address&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'172.25.255.202'&lt;/span&gt;                                                         |
| dns_domain              |                                                                                                                                                                  |
| dns_name                |                                                                                                                                                                  |
| extra_dhcp_opts         |                                                                                                                                                                  |
| fixed_ips               | &lt;span class=&quot;nv&quot;&gt;ip_address&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'172.25.255.202'&lt;/span&gt;, &lt;span class=&quot;nv&quot;&gt;subnet_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'e0531da2-b031-4e0a-9303-33f10d9c3aec'&lt;/span&gt;                                                                                    |
| &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;                      | abe786ea-7c9a-4937-816d-edd996dde5a5                                                                                                                             |
| location                | &lt;span class=&quot;nv&quot;&gt;cloud&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;, project.domain_id&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'default'&lt;/span&gt;, project.domain_name&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;, project.id&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'5df4e0c1c68647ef800e7904d455b58d'&lt;/span&gt;, project.name&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'admin'&lt;/span&gt;, &lt;span class=&quot;nv&quot;&gt;region_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'RegionOne'&lt;/span&gt;, &lt;span class=&quot;nv&quot;&gt;zone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; |
| mac_address             | fa:16:3e:e2:f5:62                                                                                                                                                |
| name                    | octavia-lb-26a6049b-f5d0-4ac4-b64f-b3e6671ae6e0                                                                                                                  |
| network_id              | 58ba4366-ecc5-46f6-8898-8b8e743797d6                                                                                                                             |
| port_security_enabled   | True                                                                                                                                                             |
| project_id              | 5df4e0c1c68647ef800e7904d455b58d                                                                                                                                 |
| propagate_uplink_status | None                                                                                                                                                             |
| qos_policy_id           | None                                                                                                                                                             |
| resource_request        | None                                                                                                                                                             |
| revision_number         | 4                                                                                                                                                                |
| security_group_ids      | d9386462-0eae-43c1-b815-f999fa3cd833                                                                                                                             |
| status                  | DOWN                                                                                                                                                             |
| tags                    |                                                                                                                                                                  |
| trunk_details           | None                                                                                                                                                             |
| updated_at              | 2020-03-22T17:16:41Z                                                                                                                                             |
+-------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;lookback@LookdeMacBook-Pro ~/OpenStack]&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;创建一个-listener-监控器&quot;&gt;创建一个 listener 监控器&lt;/h3&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;lookback@LookdeMacBook-Pro ~/OpenStack]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;openstack loadbalancer listener create &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; listener-test2 &lt;span class=&quot;nt&quot;&gt;--protocol&lt;/span&gt; TCP &lt;span class=&quot;nt&quot;&gt;--protocol-port&lt;/span&gt; 4200 test2
+-----------------------------+--------------------------------------+
| Field                       | Value                                |
+-----------------------------+--------------------------------------+
| admin_state_up              | True                                 |
| connection_limit            | &lt;span class=&quot;nt&quot;&gt;-1&lt;/span&gt;                                   |
| created_at                  | 2020-03-22T16:50:42                  |
| default_pool_id             | None                                 |
| default_tls_container_ref   | None                                 |
| description                 |                                      |
| &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;                          | 81d6ca4f-c6b0-4674-9eef-80511d0f97be |
| insert_headers              | None                                 |
| l7policies                  |                                      |
| loadbalancers               | 26a6049b-f5d0-4ac4-b64f-b3e6671ae6e0 |
| name                        | listener-test2                       |
| operating_status            | OFFLINE                              |
| project_id                  | 5df4e0c1c68647ef800e7904d455b58d     |
| protocol                    | TCP                                  |
| protocol_port               | 4200                                 |
| provisioning_status         | PENDING_CREATE                       |
| sni_container_refs          | &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt;                                   |
| timeout_client_data         | 50000                                |
| timeout_member_connect      | 5000                                 |
| timeout_member_data         | 50000                                |
| timeout_tcp_inspect         | 0                                    |
| updated_at                  | None                                 |
| client_ca_tls_container_ref | None                                 |
| client_authentication       | NONE                                 |
| client_crl_container_ref    | None                                 |
| allowed_cidrs               |                                      |
+-----------------------------+--------------------------------------+
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;lookback@LookdeMacBook-Pro ~/OpenStack]&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;创建一个资源池&quot;&gt;创建一个资源池&lt;/h3&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;lookback@LookdeMacBook-Pro ~/OpenStack]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;openstack loadbalancer pool create &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; pool-test2 &lt;span class=&quot;nt&quot;&gt;--lb-algorithm&lt;/span&gt; SOURCE_IP &lt;span class=&quot;nt&quot;&gt;--listener&lt;/span&gt; listener-test2 &lt;span class=&quot;nt&quot;&gt;--protocol&lt;/span&gt; TCP
+----------------------+--------------------------------------+
| Field                | Value                                |
+----------------------+--------------------------------------+
| admin_state_up       | True                                 |
| created_at           | 2020-03-22T16:54:22                  |
| description          |                                      |
| healthmonitor_id     |                                      |
| &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;                   | 6850d049-2d41-4e47-bf4b-f930fb09784a |
| lb_algorithm         | SOURCE_IP                            |
| listeners            | 81d6ca4f-c6b0-4674-9eef-80511d0f97be |
| loadbalancers        | 26a6049b-f5d0-4ac4-b64f-b3e6671ae6e0 |
| members              |                                      |
| name                 | pool-test2                           |
| operating_status     | OFFLINE                              |
| project_id           | 5df4e0c1c68647ef800e7904d455b58d     |
| protocol             | TCP                                  |
| provisioning_status  | PENDING_CREATE                       |
| session_persistence  | None                                 |
| updated_at           | None                                 |
| tls_container_ref    | None                                 |
| ca_tls_container_ref | None                                 |
| crl_container_ref    | None                                 |
| tls_enabled          | False                                |
+----------------------+--------------------------------------+
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;lookback@LookdeMacBook-Pro ~/OpenStack]&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;添加监控监控&quot;&gt;添加监控监控&lt;/h3&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;lookback@LookdeMacBook-Pro ~/OpenStack]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;openstack loadbalancer healthmonitor create &lt;span class=&quot;nt&quot;&gt;--delay&lt;/span&gt; 3 &lt;span class=&quot;nt&quot;&gt;--type&lt;/span&gt; TCP &lt;span class=&quot;nt&quot;&gt;--max-retries&lt;/span&gt; 3 &lt;span class=&quot;nt&quot;&gt;--timeout&lt;/span&gt; 3 &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; healthmonitor-test2 pool-test2
+---------------------+--------------------------------------+
| Field               | Value                                |
+---------------------+--------------------------------------+
| project_id          | 5df4e0c1c68647ef800e7904d455b58d     |
| name                | healthmonitor-test2                  |
| admin_state_up      | True                                 |
| pools               | 6850d049-2d41-4e47-bf4b-f930fb09784a |
| created_at          | 2020-03-22T18:07:29                  |
| provisioning_status | PENDING_CREATE                       |
| updated_at          | None                                 |
| delay               | 3                                    |
| expected_codes      | None                                 |
| max_retries         | 3                                    |
| http_method         | None                                 |
| &lt;span class=&quot;nb&quot;&gt;timeout&lt;/span&gt;             | 3                                    |
| max_retries_down    | 3                                    |
| url_path            | None                                 |
| &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;                | TCP                                  |
| &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;                  | 7a901bb8-eb8a-490b-977d-6c756c3d9bc9 |
| operating_status    | OFFLINE                              |
| http_version        | None                                 |
| domain_name         | None                                 |
+---------------------+--------------------------------------+
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;lookback@LookdeMacBook-Pro ~/OpenStack]&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;给负载均衡器添加后端成员&quot;&gt;给负载均衡器添加后端成员&lt;/h3&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;lookback@LookdeMacBook-Pro ~/OpenStack]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;openstack loadbalancer member create &lt;span class=&quot;nt&quot;&gt;--subnet-id&lt;/span&gt; e0531da2-b031-4e0a-9303-33f10d9c3aec &lt;span class=&quot;nt&quot;&gt;--protocol-port&lt;/span&gt; 4200 &lt;span class=&quot;nt&quot;&gt;--address&lt;/span&gt; 172.25.106.17 &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; member1-test2 pool-test2 
+---------------------+--------------------------------------+
| Field               | Value                                |
+---------------------+--------------------------------------+
| address             | 172.25.106.17                        |
| admin_state_up      | True                                 |
| created_at          | 2020-03-22T17:30:28                  |
| &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;                  | b573666b-6d9e-423a-94cc-e6e4a4067bf0 |
| name                | member1-test2                        |
| operating_status    | NO_MONITOR                           |
| project_id          | 5df4e0c1c68647ef800e7904d455b58d     |
| protocol_port       | 4200                                 |
| provisioning_status | PENDING_CREATE                       |
| subnet_id           | e0531da2-b031-4e0a-9303-33f10d9c3aec |
| updated_at          | None                                 |
| weight              | 1                                    |
| monitor_port        | None                                 |
| monitor_address     | None                                 |
| backup              | False                                |
+---------------------+--------------------------------------+
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;lookback@LookdeMacBook-Pro ~/OpenStack]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;openstack loadbalancer member create &lt;span class=&quot;nt&quot;&gt;--subnet-id&lt;/span&gt; e0531da2-b031-4e0a-9303-33f10d9c3aec &lt;span class=&quot;nt&quot;&gt;--protocol-port&lt;/span&gt; 4200 &lt;span class=&quot;nt&quot;&gt;--address&lt;/span&gt; 172.25.106.18 &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; member2-test2 pool-test2  
+---------------------+--------------------------------------+
| Field               | Value                                |
+---------------------+--------------------------------------+
| address             | 172.25.106.18                        |
| admin_state_up      | True                                 |
| created_at          | 2020-03-22T17:30:41                  |
| &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;                  | 93455ca9-b501-4509-a4bd-1fba59775363 |
| name                | member2-test2                        |
| operating_status    | NO_MONITOR                           |
| project_id          | 5df4e0c1c68647ef800e7904d455b58d     |
| protocol_port       | 4200                                 |
| provisioning_status | PENDING_CREATE                       |
| subnet_id           | e0531da2-b031-4e0a-9303-33f10d9c3aec |
| updated_at          | None                                 |
| weight              | 1                                    |
| monitor_port        | None                                 |
| monitor_address     | None                                 |
| backup              | False                                |
+---------------------+--------------------------------------+
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;lookback@LookdeMacBook-Pro ~/OpenStack]&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;查看&quot;&gt;查看&lt;/h3&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;lookback@LookdeMacBook-Pro ~/OpenStack]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;openstack loadbalancer amphora list
+--------------------------------------+--------------------------------------+-----------+--------+----------------+----------------+
| &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;                                   | loadbalancer_id                      | status    | role   | lb_network_ip  | ha_ip          |
+--------------------------------------+--------------------------------------+-----------+--------+----------------+----------------+
| 8bbd6b3e-0610-40f3-b243-13fc0e0abb07 | 26a6049b-f5d0-4ac4-b64f-b3e6671ae6e0 | ALLOCATED | BACKUP | 172.29.255.113 | 172.25.255.202 |
| e3402547-f9a7-4c2d-ab31-e259af17c356 | 26a6049b-f5d0-4ac4-b64f-b3e6671ae6e0 | ALLOCATED | MASTER | 172.29.255.67  | 172.25.255.202 |
+--------------------------------------+--------------------------------------+-----------+--------+----------------+----------------+
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;lookback@LookdeMacBook-Pro ~/OpenStack]&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;lookback@LookdeMacBook-Pro ~/OpenStack]&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;lookback@LookdeMacBook-Pro ~/OpenStack]&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;lookback@LookdeMacBook-Pro ~/OpenStack]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;openstack loadbalancer member list pool-test2
+--------------------------------------+---------------+----------------------------------+---------------------+---------------+---------------+------------------+--------+
| &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;                                   | name          | project_id                       | provisioning_status | address       | protocol_port | operating_status | weight |
+--------------------------------------+---------------+----------------------------------+---------------------+---------------+---------------+------------------+--------+
| b573666b-6d9e-423a-94cc-e6e4a4067bf0 | member1-test2 | 5df4e0c1c68647ef800e7904d455b58d | ACTIVE              | 172.25.106.17 |          4200 | NO_MONITOR       |      1 |
| 93455ca9-b501-4509-a4bd-1fba59775363 | member2-test2 | 5df4e0c1c68647ef800e7904d455b58d | ACTIVE              | 172.25.106.18 |          4200 | NO_MONITOR       |      1 |
+--------------------------------------+---------------+----------------------------------+---------------------+---------------+---------------+------------------+--------+
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;lookback@LookdeMacBook-Pro ~/OpenStack]&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;lookback@LookdeMacBook-Pro ~/OpenStack]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;openstack loadbalancer list
+--------------------------------------+-------+----------------------------------+----------------+---------------------+----------+
| &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;                                   | name  | project_id                       | vip_address    | provisioning_status | provider |
+--------------------------------------+-------+----------------------------------+----------------+---------------------+----------+
| 26a6049b-f5d0-4ac4-b64f-b3e6671ae6e0 | test2 | 5df4e0c1c68647ef800e7904d455b58d | 172.25.255.202 | ACTIVE              | amphora  |
+--------------------------------------+-------+----------------------------------+----------------+---------------------+----------+
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;lookback@LookdeMacBook-Pro ~/OpenStack]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;openstack loadbalancer show 26a6049b-f5d0-4ac4-b64f-b3e6671ae6e0          
+---------------------+--------------------------------------+
| Field               | Value                                |
+---------------------+--------------------------------------+
| admin_state_up      | True                                 |
| availability_zone   |                                      |
| created_at          | 2020-03-22T16:46:45                  |
| description         |                                      |
| flavor_id           | None                                 |
| &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;                  | 26a6049b-f5d0-4ac4-b64f-b3e6671ae6e0 |
| listeners           | 81d6ca4f-c6b0-4674-9eef-80511d0f97be |
| name                | test2                                |
| operating_status    | ONLINE                               |
| pools               | 6850d049-2d41-4e47-bf4b-f930fb09784a |
| project_id          | 5df4e0c1c68647ef800e7904d455b58d     |
| provider            | amphora                              |
| provisioning_status | ACTIVE                               |
| updated_at          | 2020-03-22T18:07:30                  |
| vip_address         | 172.25.255.202                       |
| vip_network_id      | 58ba4366-ecc5-46f6-8898-8b8e743797d6 |
| vip_port_id         | abe786ea-7c9a-4937-816d-edd996dde5a5 |
| vip_qos_policy_id   | None                                 |
| vip_subnet_id       | e0531da2-b031-4e0a-9303-33f10d9c3aec |
+---------------------+--------------------------------------+
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;lookback@LookdeMacBook-Pro ~/OpenStack]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;openstack loadbalancer listener show 81d6ca4f-c6b0-4674-9eef-80511d0f97be
+-----------------------------+--------------------------------------+
| Field                       | Value                                |
+-----------------------------+--------------------------------------+
| admin_state_up              | True                                 |
| connection_limit            | &lt;span class=&quot;nt&quot;&gt;-1&lt;/span&gt;                                   |
| created_at                  | 2020-03-22T16:50:42                  |
| default_pool_id             | 6850d049-2d41-4e47-bf4b-f930fb09784a |
| default_tls_container_ref   | None                                 |
| description                 |                                      |
| &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;                          | 81d6ca4f-c6b0-4674-9eef-80511d0f97be |
| insert_headers              | None                                 |
| l7policies                  |                                      |
| loadbalancers               | 26a6049b-f5d0-4ac4-b64f-b3e6671ae6e0 |
| name                        | listener-test2                       |
| operating_status            | ONLINE                               |
| project_id                  | 5df4e0c1c68647ef800e7904d455b58d     |
| protocol                    | TCP                                  |
| protocol_port               | 4200                                 |
| provisioning_status         | ACTIVE                               |
| sni_container_refs          | &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt;                                   |
| timeout_client_data         | 50000                                |
| timeout_member_connect      | 5000                                 |
| timeout_member_data         | 50000                                |
| timeout_tcp_inspect         | 0                                    |
| updated_at                  | 2020-03-22T18:07:30                  |
| client_ca_tls_container_ref | None                                 |
| client_authentication       | NONE                                 |
| client_crl_container_ref    | None                                 |
| allowed_cidrs               |                                      |
+-----------------------------+--------------------------------------+
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;lookback@LookdeMacBook-Pro ~/OpenStack]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;openstack loadbalancer pool show 6850d049-2d41-4e47-bf4b-f930fb09784a
+----------------------+--------------------------------------+
| Field                | Value                                |
+----------------------+--------------------------------------+
| admin_state_up       | True                                 |
| created_at           | 2020-03-22T16:54:22                  |
| description          |                                      |
| healthmonitor_id     | 7a901bb8-eb8a-490b-977d-6c756c3d9bc9 |
| &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;                   | 6850d049-2d41-4e47-bf4b-f930fb09784a |
| lb_algorithm         | SOURCE_IP                            |
| listeners            | 81d6ca4f-c6b0-4674-9eef-80511d0f97be |
| loadbalancers        | 26a6049b-f5d0-4ac4-b64f-b3e6671ae6e0 |
| members              | b573666b-6d9e-423a-94cc-e6e4a4067bf0 |
|                      | 93455ca9-b501-4509-a4bd-1fba59775363 |
| name                 | pool-test2                           |
| operating_status     | ONLINE                               |
| project_id           | 5df4e0c1c68647ef800e7904d455b58d     |
| protocol             | TCP                                  |
| provisioning_status  | ACTIVE                               |
| session_persistence  | None                                 |
| updated_at           | 2020-03-22T18:07:30                  |
| tls_container_ref    | None                                 |
| ca_tls_container_ref | None                                 |
| crl_container_ref    | None                                 |
| tls_enabled          | False                                |
+----------------------+--------------------------------------+
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;lookback@LookdeMacBook-Pro ~/OpenStack]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;openstack loadbalancer healthmonitor show 7a901bb8-eb8a-490b-977d-6c756c3d9bc9
+---------------------+--------------------------------------+
| Field               | Value                                |
+---------------------+--------------------------------------+
| project_id          | 5df4e0c1c68647ef800e7904d455b58d     |
| name                | healthmonitor-test2                  |
| admin_state_up      | True                                 |
| pools               | 6850d049-2d41-4e47-bf4b-f930fb09784a |
| created_at          | 2020-03-22T18:07:29                  |
| provisioning_status | ACTIVE                               |
| updated_at          | 2020-03-22T18:07:30                  |
| delay               | 3                                    |
| expected_codes      | None                                 |
| max_retries         | 3                                    |
| http_method         | None                                 |
| &lt;span class=&quot;nb&quot;&gt;timeout&lt;/span&gt;             | 3                                    |
| max_retries_down    | 3                                    |
| url_path            | None                                 |
| &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;                | TCP                                  |
| &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;                  | 7a901bb8-eb8a-490b-977d-6c756c3d9bc9 |
| operating_status    | ONLINE                               |
| http_version        | None                                 |
| domain_name         | None                                 |
+---------------------+--------------------------------------+
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;lookback@LookdeMacBook-Pro ~/OpenStack]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;openstack loadbalancer member show 6850d049-2d41-4e47-bf4b-f930fb09784a b573666b-6d9e-423a-94cc-e6e4a4067bf0
+---------------------+--------------------------------------+
| Field               | Value                                |
+---------------------+--------------------------------------+
| address             | 172.25.106.17                        |
| admin_state_up      | True                                 |
| created_at          | 2020-03-22T17:30:28                  |
| &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;                  | b573666b-6d9e-423a-94cc-e6e4a4067bf0 |
| name                | member1-test2                        |
| operating_status    | ONLINE                               |
| project_id          | 5df4e0c1c68647ef800e7904d455b58d     |
| protocol_port       | 4200                                 |
| provisioning_status | ACTIVE                               |
| subnet_id           | e0531da2-b031-4e0a-9303-33f10d9c3aec |
| updated_at          | 2020-03-22T18:07:35                  |
| weight              | 1                                    |
| monitor_port        | None                                 |
| monitor_address     | None                                 |
| backup              | False                                |
+---------------------+--------------------------------------+
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;lookback@LookdeMacBook-Pro ~/OpenStack]&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;测试可用性&quot;&gt;测试可用性&lt;/h3&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;lookback@LookdeMacBook-Pro ~/OpenStack]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;telnet 172.25.255.202 4200
Trying 172.25.255.202...
Connected to 172.25.255.202.
Escape character is &lt;span class=&quot;s1&quot;&gt;'^]'&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
^]
telnet&amp;gt; quit
Connection closed.
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;lookback@LookdeMacBook-Pro ~/OpenStack]&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;lookback@LookdeMacBook-Pro ~/OpenStack]&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;lookback@LookdeMacBook-Pro ~/OpenStack]&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;lookback@LookdeMacBook-Pro ~/OpenStack]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-Lks&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-vv&lt;/span&gt; http://172.25.255.202:4200
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;   Trying 172.25.255.202...
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; TCP_NODELAY &lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; Connected to 172.25.255.202 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;172.25.255.202&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; port 4200 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#0)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; GET / HTTP/1.1
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; Host: 172.25.255.202:4200
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; User-Agent: curl/7.64.1
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; Accept: &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; 
&amp;lt; HTTP/1.1 200 OK
&amp;lt; content-type: application/json
&amp;lt; content-length: 330
&amp;lt; 
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;ok&quot;&lt;/span&gt; : &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;status&quot;&lt;/span&gt; : 200,
  &lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt; : &lt;span class=&quot;s2&quot;&gt;&quot;crate_node_2&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;cluster_name&quot;&lt;/span&gt; : &lt;span class=&quot;s2&quot;&gt;&quot;dsmnjdc_history_bet_cluster&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;version&quot;&lt;/span&gt; : &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;number&quot;&lt;/span&gt; : &lt;span class=&quot;s2&quot;&gt;&quot;4.0.3&quot;&lt;/span&gt;,
    &lt;span class=&quot;s2&quot;&gt;&quot;build_hash&quot;&lt;/span&gt; : &lt;span class=&quot;s2&quot;&gt;&quot;1b7058fa16f6dfc833beb1b4fe2263c105c202f3&quot;&lt;/span&gt;,
    &lt;span class=&quot;s2&quot;&gt;&quot;build_timestamp&quot;&lt;/span&gt; : &lt;span class=&quot;s2&quot;&gt;&quot;2019-08-09T01:20:38Z&quot;&lt;/span&gt;,
    &lt;span class=&quot;s2&quot;&gt;&quot;build_snapshot&quot;&lt;/span&gt; : &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;,
    &lt;span class=&quot;s2&quot;&gt;&quot;lucene_version&quot;&lt;/span&gt; : &lt;span class=&quot;s2&quot;&gt;&quot;8.0.0&quot;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; Connection &lt;span class=&quot;c&quot;&gt;#0 to host 172.25.255.202 left intact&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; Closing connection 0
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;lookback@LookdeMacBook-Pro ~/OpenStack]&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Lewin</name></author><category term="openstack" /><category term="命令行" /><category term="loadbalancer" /><summary type="html">鉴权文件格式 export OS_USERNAME=admin export OS_PASSWORD=adminPassword export OS_TENANT_NAME=admin export OS_AUTH_URL=https://xxxxxxxx:port/v3 export OS_USER_DOMAIN_NAME=Default export OS_PROJECT_DOMAIN_NAME=Default export OS_IDENTITY_API_VERSION=3 export OS_PROJECT_ID=xxxxxxxxxxxxxxxxx</summary></entry></feed>